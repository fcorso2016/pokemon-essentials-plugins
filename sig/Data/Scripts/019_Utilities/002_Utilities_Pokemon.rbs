class Object
  # ==============================================================================
  # Nicknaming and storing PokÃ©mon
  # ==============================================================================
  def pbBoxesFull?: () -> bool

  def pbNickname: (Pokemon pkmn) -> void

  def pbStorePokemon: (Pokemon pkmn) -> void

  def pbNicknameAndStore: (Pokemon pkmn) -> void

  # ==============================================================================
  # Giving PokÃ©mon to the player (will send to storage if party is full)
  # ==============================================================================
  def pbAddPokemon: (Pokemon | Symbol pkmn, ?Integer level, ?bool see_form) -> bool

  def pbAddPokemonSilent: (Pokemon | Symbol pkmn, ?Integer level, ?bool see_form) -> bool

  # ==============================================================================
  # Giving PokÃ©mon/eggs to the player (can only add to party)
  # ==============================================================================
  def pbAddToParty: (Pokemon pkmn, ?::Integer level, ?bool see_form) -> bool

  def pbAddToPartySilent: (Pokemon | Symbol pkmn, ?Integer? level, ?bool see_form) -> bool

  def pbAddForeignPokemon: (Pokemon | Symbol pkmn, ?Integer level, ?String? owner_name, ?String? nickname, ?Integer owner_gender, ?bool see_form) -> bool

  def pbGenerateEgg: (Pokemon | Symbol pkmn, ?String text) -> bool

  alias pbAddEgg pbGenerateEgg

  alias pbGenEgg pbGenerateEgg

  # ==============================================================================
  # Analyse PokÃ©mon in the party
  # ==============================================================================
  # Returns the first unfainted, non-egg PokÃ©mon in the player's party.
  def pbFirstAblePokemon: (Integer variable_ID) -> Pokemon

  # ==============================================================================
  # Return a level value based on PokÃ©mon in a party
  # ==============================================================================
  def pbBalancedLevel: (Array[Pokemon] party) -> Integer

  # ==============================================================================
  # Calculates a PokÃ©mon's size (in millimeters)
  # ==============================================================================
  def pbSize: (Pokemon pkmn) -> Integer

  # ==============================================================================
  # Returns true if the given species can be legitimately obtained as an egg
  # ==============================================================================
  def pbHasEgg?: (Symbol species) -> bool
end


