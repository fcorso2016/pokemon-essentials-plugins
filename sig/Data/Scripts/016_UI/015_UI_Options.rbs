# ==============================================================================
#
# ==============================================================================
class PokemonSystem
  attr_accessor textspeed: Integer

  attr_accessor battlescene: Integer

  attr_accessor battlestyle: Integer

  attr_accessor sendtoboxes: Integer

  attr_accessor givenicknames: Integer

  attr_accessor frame: Integer

  attr_accessor textskin: Integer

  attr_accessor screensize: Integer

  attr_accessor language: Integer

  attr_accessor runstyle: Integer

  attr_accessor bgmvolume: Integer

  attr_accessor sevolume: Integer

  attr_accessor textinput: Integer

  def initialize: () -> void
end

# ==============================================================================
#
# ==============================================================================
interface _Option

  def name: -> String

  def get: () -> Integer
  def set: (Integer value, _Scene scene) -> void

  def next: (Integer current) -> Integer
  def prev: (Integer current) -> Integer

end

module PropertyMixin[T]
  attr_reader name: String

  @get_proc: ^() -> T

  @set_proc: ^(T, _Scene) -> void

  def get: () -> T

  def set: (T value, _Scene scene) -> void
end

# ==============================================================================
#
# ==============================================================================
class EnumOption
  include PropertyMixin[Integer]
  include _Option

  attr_reader values: Array[String]

  def initialize: (String name, Array[String] values, ^() -> Integer get_proc, ^(Integer, _Scene) -> void set_proc) -> void

end

# ==============================================================================
#
# ==============================================================================
class NumberOption
  include PropertyMixin[Integer]
  include _Option

  attr_reader lowest_value: Integer

  attr_reader highest_value: Integer

  def initialize: (String name, Range[Integer] | [Integer, Integer] range, ^() -> Integer get_proc, ^(Integer, _Scene) -> void set_proc) -> void
end

# ==============================================================================
#
# ==============================================================================
class SliderOption
  include PropertyMixin[Integer]
  include _Option

  @interval: Integer

  attr_reader lowest_value: Integer

  attr_reader highest_value: Integer

  def initialize: (String name, [Integer, Integer, Integer] range, ^() -> Integer get_proc, ^(Integer, _Scene) -> void set_proc) -> void
end

# ==============================================================================
# Main options list
# ==============================================================================
class Window_PokemonOption < Window_DrawableCommand
  @options: Array[_Option]

  @values: Array[Integer]

  attr_reader value_changed: bool

  SEL_NAME_BASE_COLOR: Color

  SEL_NAME_SHADOW_COLOR: Color

  SEL_VALUE_BASE_COLOR: Color

  SEL_VALUE_SHADOW_COLOR: Color

  def initialize: (Array[_Option] options, Integer x, Integer y, Integer width, Integer height) -> void

  def []: (Integer i) -> Integer

  def []=: (Integer i, Integer value) -> void

  def setValueNoRefresh: (Integer i, Integer value) -> void
end

# ==============================================================================
# Options main screen
# ==============================================================================
class PokemonOption_Scene
  include _PokeScene
  include _PokeUpdatable

  @hashes: Array[HandlerHash[Symbol, MenuHandlers::hash_schema]]
  @options: Array[_Option]

  @viewport: Viewport

  attr_reader sprites: Hash[String, _Visualizable]

  attr_reader in_load_screen: bool

  def pbStartScene: (?bool in_load_screen) -> void

  def pbChangeSelection: () -> void

  def pbOptions: () -> void
end

# ==============================================================================
#
# ==============================================================================
class PokemonOptionScreen
  include _PokeScreen

  @scene: PokemonOption_Scene

  def initialize: (PokemonOption_Scene scene) -> void

  def pbStartScreen: (?bool in_load_screen) -> void
end



