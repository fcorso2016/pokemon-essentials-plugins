# ==============================================================================
# Mystery Gift system
# By Maruno
# ==============================================================================
# This url is the location of an example Mystery Gift file.
# You should change it to your file's url once you upload it.
# ==============================================================================
module MysteryGift
  URL: String
end

class Object
  # ==============================================================================
  # Creating a new Mystery Gift for the Master file, and editing an existing one.
  # ==============================================================================
  # type: 0=PokÃ©mon; 1 or higher=item (is the item's quantity).
  # item: The thing being turned into a Mystery Gift (PokÃ©mon object or item ID).
  def pbEditMysteryGift: (Integer `type`, Pokemon | Symbol item, ?Integer id, ?String giftname) -> [Integer, Integer, Pokemon | Symbol, String]?

  def pbCreateMysteryGift: (Integer `type`, Pokemon | Symbol item) -> void

  # ==============================================================================
  # Debug option for managing gifts in the Master file and exporting them to a
  # file to be uploaded.
  # ==============================================================================
  def pbManageMysteryGifts: () -> void

  def pbRefreshMGCommands: (Array[[Integer, Integer, Pokemon | Symbol, String]] master, Array[Integer] online) -> void

  # ==============================================================================
  # Downloads all available Mystery Gifts that haven't been downloaded yet.
  # ==============================================================================
  # Called from the Continue/New Game screen.
  def pbDownloadMysteryGift: (Player trainer) -> void

  # ==============================================================================
  # Converts an array of gifts into a string and back.
  # ==============================================================================
  def pbMysteryGiftEncrypt: (Array[[Integer, Integer, Pokemon | Symbol, String]] gift) -> String

  def pbMysteryGiftDecrypt: (String gift) -> Array[[Integer, Integer, Pokemon | Symbol, String]]

  # ==============================================================================
  # Collecting a Mystery Gift from the deliveryman.
  # ==============================================================================
  def pbNextMysteryGiftID: () -> Integer

  def pbReceiveMysteryGift: (Integer id) -> bool
end


