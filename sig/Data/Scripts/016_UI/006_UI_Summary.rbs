# ==============================================================================
#
# ==============================================================================
class MoveSelectionSprite < Sprite
  include _Refreshable

  @fifthmove: bool
  @frame: Integer
  @movesel: AnimatedBitmap

  @updating: bool

  attr_reader preselected: bool

  attr_reader index: Integer

  def initialize: (?Viewport? viewport, ?bool fifthmove) -> void

  def index=: (Integer value) -> void

  def preselected=: (bool value) -> void
end

# ==============================================================================
#
# ==============================================================================
class RibbonSelectionSprite < MoveSelectionSprite
  @spriteVisible: bool

  def initialize: (?Viewport? viewport) -> void

  def visible=: (bool value) -> void
end

# ==============================================================================
#
# ==============================================================================
class PokemonSummary_Scene
  include _PokeScene
  include _PokeUpdatable

  MARK_WIDTH: Integer

  MARK_HEIGHT: Integer

  # Colors used for messages in this scene
  RED_TEXT_BASE: Color

  RED_TEXT_SHADOW: Color

  BLACK_TEXT_BASE: Color

  BLACK_TEXT_SHADOW: Color

  @inbattle: bool
  @markingbitmap: AnimatedBitmap
  @nationalDexList: Array[Symbol]
  @page: Integer
  @party: Array[Pokemon]
  @partyindex: Integer
  @pokemon: Pokemon
  @ribbonOffset: Integer
  @sprites: Hash[String, _Visualizable]
  @typebitmap: AnimatedBitmap
  @viewport: Viewport

  def pbStartScene: (Array[Pokemon] party, Integer partyindex, ?bool inbattle) -> void

  def pbStartForgetScene: (Array[Pokemon] party, Integer partyindex, Symbol move_to_learn) -> void

  def pbDisplay: (String text) -> void

  def pbConfirm: (String text) -> Integer

  def pbShowCommands: (Array[String] commands, ?Integer index) -> Integer

  def drawMarkings: (Bitmap bitmap, Integer x, Integer y) -> void

  def drawPage: (Integer page) -> void

  def drawPageOne: () -> void

  def drawPageOneEgg: () -> void

  def drawPageTwo: () -> void

  def drawPageThree: () -> void

  def drawPageFour: () -> void

  def drawPageFourSelecting: (GameData::Move move_to_learn) -> void

  def drawSelectedMove: (GameData::Move move_to_learn, Integer selected_move) -> void

  def drawPageFive: () -> void

  def drawSelectedRibbon: (Integer ribbonid) -> void

  def pbGoToPrevious: () -> void

  def pbGoToNext: () -> void

  def pbChangePokemon: () -> void

  def pbMoveSelection: () -> void

  def pbRibbonSelection: () -> void

  def pbMarking: (Pokemon pokemon) -> bool

  def pbOptions: () -> bool

  def pbChooseMoveToForget: ((Symbol | String | GameData::Move)? move_to_learn) -> void

  def pbScene: () -> void
end

# ==============================================================================
#
# ==============================================================================
class PokemonSummaryScreen
  include _PokeScreen[PokemonSummary_Scene]

  @inbattle: bool
  @scene: PokemonSummary_Scene

  def initialize: (PokemonSummary_Scene scene, ?bool inbattle) -> void

  def pbStartScreen: (Array[Pokemon] | PokemonBox party, Integer partyindex) -> void

  def pbStartForgetScreen: (Array[Pokemon] party, Integer partyindex, (Symbol | String | GameData::Move)? move_to_learn) -> Integer

  def pbStartChooseMoveScreen: (Array[Pokemon] party, Integer partyindex, String message) -> Integer
end

class Object
  # ==============================================================================
  #
  # ==============================================================================
  def pbChooseMove: (Pokemon pokemon, Integer variableNumber, Integer nameVarNumber) -> void
end


