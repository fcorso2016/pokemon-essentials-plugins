# ==============================================================================
# Abstraction layer for Pokemon Essentials
# ==============================================================================
interface _StoreAdapter
  def getInventory: () -> PokemonBag

  def getName: (Symbol | String | GameData::Item item) -> String

  def getNamePlural: (Symbol | String | GameData::Item item) -> String

  def getDisplayName: (Symbol | String | GameData::Item item) -> String

  def getDisplayNamePlural: (Symbol | String | GameData::Item item) -> String

  def getDescription: (Symbol | String | GameData::Item item) -> String

  def getItemIcon: (Symbol | String | GameData::Item item) -> String?

  # Unused
  def getItemIconRect: (Symbol | String | GameData::Item _item) -> Rect

  def getQuantity: (Symbol | String | GameData::Item item) -> Integer

  def showQuantity?: (Symbol | String | GameData::Item item) -> bool

  def getPrice: (Symbol | String | GameData::Item item, ?bool selling) -> Integer

  def getDisplayPrice: (Symbol | String | GameData::Item item, ?bool selling) -> String

  def canSell?: (Symbol | String | GameData::Item item) -> bool

  def addItem: (Symbol | String | GameData::Item item) -> bool

  def removeItem: (Symbol | String | GameData::Item item) -> bool
end

class PokemonMartAdapter
  include _StoreAdapter

  def getMoney: () -> Integer

  def getMoneyString: () -> String

  def setMoney: (Integer value) -> void

end

# ==============================================================================
# Buy and Sell adapters
# ==============================================================================
interface _Adapter
  # For showing in messages
  def getName: (Symbol | String | GameData::Item item) -> String

  # For showing in messages
  def getNamePlural: (Symbol | String | GameData::Item item) -> String

  # For showing in the list of items
  def getDisplayName: (Symbol | String | GameData::Item item) -> String

  # For showing in the list of items
  def getDisplayNamePlural: (Symbol | String | GameData::Item item) -> String

  def getDisplayPrice: (Symbol | String | GameData::Item item) -> String

  def isSelling?: () -> bool
end

class BuyAdapter
  include _Adapter
  @adapter: PokemonMartAdapter

  def initialize: (PokemonMartAdapter adapter) -> void

end

# ==============================================================================
#
# ==============================================================================
class SellAdapter
  include _Adapter
  @adapter: PokemonMartAdapter

  def initialize: (PokemonMartAdapter adapter) -> void

end

# ==============================================================================
# PokÃ©mon Mart
# ==============================================================================
class Window_PokemonMart < Window_DrawableCommand
  @adapter: _Adapter

  @stock: Array[Symbol | String | GameData::Item]

  def initialize: (Array[Symbol | String | GameData::Item] stock, _Adapter adapter, Integer x, Integer y, Integer width, Integer height, ?Viewport? viewport) -> void

  def itemCount: () -> Integer

  def item: () -> Symbol?
end

# ==============================================================================
#
# ==============================================================================
class PokemonMart_Scene
  include _Scene
  include _Updatable
  include _PokeRefreshable

  @adapter: PokemonMartAdapter
  @buying: bool
  @sprites: Hash[String, _Visualizable]
  @stock: Array[Symbol | String | GameData::Item]
  @subscene: _Scene?

  @viewport: Viewport
  @viewport2: Viewport

  def pbStartBuyOrSellScene: (bool buying, Array[Symbol | String | GameData::Item] stock, PokemonMartAdapter adapter) -> void

  def pbStartBuyScene: (Array[Symbol | String | GameData::Item] stock, PokemonMartAdapter adapter) -> void

  def pbStartSellScene: (PokemonBag bag, PokemonMartAdapter adapter) -> void

  def pbStartSellScene2: (PokemonBag bag, PokemonMartAdapter adapter) -> void

  def pbEndBuyScene: () -> void

  def pbEndSellScene: () -> void

  def pbPrepareWindow: (Window window) -> void

  def pbShowMoney: () -> void

  def pbHideMoney: () -> void

  def pbShowQuantity: () -> void

  def pbHideQuantity: () -> void

  def pbDisplay: (String msg, ?bool brief) -> void

  def pbDisplayPaused: (String msg) { () -> void } -> void

  def pbConfirm: (String msg) -> bool

  def pbChooseNumber: (String helptext, Symbol | String | GameData::Item item, Integer maximum) -> Integer

  def pbChooseBuyItem: () -> Symbol?
  def pbChooseSellItem: () -> Symbol?
end

# ==============================================================================
#
# ==============================================================================
class PokemonMartScreen
  include _PokeScreen

  @adapter: PokemonMartAdapter
  @scene: PokemonMart_Scene

  @stock: Array[Symbol | String | GameData::Item]

  def initialize: (PokemonMart_Scene scene, Array[Symbol | String | GameData::Item] stock) -> void

  def pbConfirm: (String msg) -> void

  def pbDisplay: (String msg) -> void

  def pbDisplayPaused: (String msg) ?{ () -> void } -> void

  def pbBuyScreen: () -> void

  def pbSellScreen: () -> void
end

class Object
  # ==============================================================================
  #
  # ==============================================================================
  def pbPokemonMart: (Array[Symbol | String | GameData::Item] stock, ?String? speech, ?bool cantsell) -> void
end


