# ==============================================================================
#
# ==============================================================================
class Window_CharacterEntry < Window_DrawableCommand
  XSIZE: Integer

  YSIZE: Integer

  @charset: String

  @othercharset: String

  def initialize: (String charset, ?Viewport? viewport) -> void

  def setOtherCharset: (String value) -> void

  def setCharset: (String value) -> void

  def character: () -> String

  def command: () -> Integer
end

# ==============================================================================
# Text entry screen - free typing.
# ==============================================================================
class PokemonEntryScene
  include _PokeScene

  USEKEYBOARD: bool

  @@Characters: Array[Array[String]]

  @maxlength: Integer
  @minlength: Integer
  @sprites: Hash[String, _Visualizable]

  @symtype: Integer
  @viewport: Viewport

  def pbStartScene: (String helptext, Integer minlength, Integer maxlength, String initialText, ?Integer subject, ?(Pokemon | _ToS)? pokemon) -> void

  def pbEntry1: () -> void

  def pbEntry2: () -> void

  def pbEntry: () -> void
end

# ==============================================================================
# Text entry screen - arrows to select letter.
# ==============================================================================
class PokemonEntryScene2
  include _PokeScene
  include _PokeUpdatable

  ROWS: Integer

  COLUMNS: Integer

  MODE1: Integer

  MODE2: Integer

  MODE3: Integer

  MODE4: Integer

  BACK: Integer

  OK: Integer

  class NameEntryCursor
    include _Updatable
    include _CheckedDisposable

    @cursor1: AnimatedBitmap
    @cursor2: AnimatedBitmap
    @cursor3: AnimatedBitmap
    @cursorPos: Integer
    @cursortype: Integer
    @sprite: Sprite

    def initialize: (Viewport? viewport) -> void

    def setCursorPos: (Integer value) -> void

    def updateCursorPos: () -> void

    def visible=: (bool value) -> void

    def visible: () -> bool

    def color=: (Color value) -> void

    def color: () -> Color

    def updateInternal: () -> void
  end

  @@Characters: Array[Array[String]]

  @bitmaps: Array[AnimatedBitmap]
  @blanks: Array[Integer]
  @cursorpos: Integer
  @helper: CharacterEntryHelper
  @helptext: String
  @maxlength: Integer
  @minlength: Integer
  @mode: Integer
  @refreshOverlay: bool
  @sprites: Hash[String, _Visualizable]
  @viewport: Viewport

  def pbStartScene: (String helptext, Integer minlength, Integer maxlength, String initialText, ?Integer subject, ?(Pokemon | _ToS)? pokemon) -> void

  def pbUpdateOverlay: () -> void

  def pbDoUpdateOverlay2: () -> void

  def pbDoUpdateOverlay: () -> void

  def pbChangeTab: (?Integer newtab) -> void

  def pbColumnEmpty?: (Integer m) -> bool

  def wrapmod: (Integer x, Integer y) -> Integer

  def pbMoveCursor: () -> bool

  def pbEntry: () -> String
end

# ==============================================================================
#
# ==============================================================================
class PokemonEntry
  include _PokeScreen

  @scene: PokemonEntryScene

  def initialize: (PokemonEntryScene scene) -> void

  def pbStartScreen: (String helptext, Integer minlength, Integer maxlength, String initialText, ?Integer mode, ?(Pokemon | _ToS)? pokemon) -> String
end

class Object
  # ==============================================================================
  #
  # ==============================================================================
  def pbEnterText: (String helptext, Integer minlength, Integer maxlength, ?String initialText, ?::Integer mode, ?(Pokemon | _ToS)? pokemon, ?bool nofadeout) -> String

  def pbEnterPlayerName: (String helptext, Integer minlength, Integer maxlength, ?String initialText, ?bool nofadeout) -> String

  def pbEnterPokemonName: (String helptext, Integer minlength, Integer maxlength, ?String initialText, ?Pokemon? pokemon, ?bool nofadeout) -> String

  def pbEnterNPCName: (String helptext, Integer minlength, Integer maxlength, ?String initialText, ?Integer id, ?bool nofadeout) -> String

  def pbEnterBoxName: (String helptext, Integer minlength, Integer maxlength, ?String initialText, ?bool nofadeout) -> String
end



