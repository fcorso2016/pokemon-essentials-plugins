# ==============================================================================
#
# ==============================================================================
class PokemonLoadPanel < Sprite
  include _Refreshable
  include _PokeRefreshable

  @bgbitmap: AnimatedBitmap
  @index: Integer

  @isContinue: bool
  @mapid: Integer
  @refreshBitmap: bool
  @refreshing: bool
  @title: String

  @totalsec: Math::double
  @trainer: Player

  attr_reader selected: untyped

  TEXT_COLOR: Color

  TEXT_SHADOW_COLOR: Color

  MALE_TEXT_COLOR: Color

  MALE_TEXT_SHADOW_COLOR: Color

  FEMALE_TEXT_COLOR: Color

  FEMALE_TEXT_SHADOW_COLOR: Color

  def initialize: (Integer index, String title, bool isContinue, Player trainer, GameStats? stats, Integer mapid, ?Viewport? viewport) -> void

  def selected=: (bool value) -> void
end

# ==============================================================================
#
# ==============================================================================
class PokemonLoad_Scene
  include _PokeScene
  include _PokeUpdatable

  @commands: Array[String]

  @sprites: Hash[String, _Visualizable]

  @viewport: Viewport

  def pbStartScene: (Array[String] commands, bool show_continue, Player trainer, GameStats? stats, Integer map_id) -> void

  def pbStartScene2: () -> void

  def pbStartDeleteScene: () -> void

  def pbSetParty: (Player trainer) -> void

  def pbChoose: (Array[String] commands) -> Integer

  def pbCloseScene: () -> void
end

# ==============================================================================
#
# ==============================================================================
class PokemonLoadScreen
  include _PokeScreen

  @save_data: Hash[untyped, untyped]
  @scene: PokemonLoad_Scene

  def initialize: (PokemonLoad_Scene scene) -> void

  # @param file_path [String] file to load save data from
  # @return [Hash] save data
  def load_save_file: (String file_path) -> Hash[untyped, untyped]

  # Called if all save data is invalid.
  # Prompts the player to delete the save files.
  def prompt_save_deletion: () -> void

  def pbStartDeleteScreen: () -> void

  def delete_save_data: () -> void

  def pbStartLoadScreen: () -> void
end



