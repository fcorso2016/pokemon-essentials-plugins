# ==============================================================================
#
# ==============================================================================
class Window_PokemonItemStorage < Window_DrawableCommand
  @adapter: PokemonMartAdapter

  attr_reader bag: PokemonBag

  attr_reader pocket: Integer

  attr_reader sortIndex: Integer

  def item: -> Symbol

  def sortIndex=: (Integer value) -> void

  def initialize: (PokemonBag bag, Integer x, Integer y, Integer width, Integer height) -> void
end

# ==============================================================================
#
# ==============================================================================
class ItemStorage_Scene
  include _PokeScene
  include _Updatable
  include _PokeRefreshable

  ITEMLISTBASECOLOR: Color

  ITEMLISTSHADOWCOLOR: Color

  ITEMTEXTBASECOLOR: Color

  ITEMTEXTSHADOWCOLOR: Color

  TITLEBASECOLOR: Color

  TITLESHADOWCOLOR: Color

  ITEMSVISIBLE: Integer

  @bag: PokemonBag
  @sprites: Hash[String, _Visualizable]
  @viewport: Viewport

  def initialize: (String title) -> void

  def pbStartScene: (PokemonBag bag) -> void

  def pbChooseNumber: (String helptext, Integer maximum) -> Integer

  def pbDisplay: (String msg, ?bool brief) -> void

  def pbConfirm: (String msg) -> bool

  def pbShowCommands: (String helptext, Array[String] commands) -> Integer

  def pbChooseItem: () -> Symbol?
end

# ==============================================================================
#
# ==============================================================================
class WithdrawItemScene < ItemStorage_Scene
  def initialize: () -> void
end

# ==============================================================================
#
# ==============================================================================
class TossItemScene < ItemStorage_Scene
  def initialize: () -> void
end

# ==============================================================================
# Common UI functions used in both the Bag and item storage screens.
# Displays messages and allows the user to choose a number/command.
# The window _helpwindow_ will display the _helptext_.
# ==============================================================================
module UIHelper
  # Letter by letter display of the message _msg_ by the window _helpwindow_.
  def self.pbDisplay: (Window_AdvancedTextPokemon helpwindow, String msg, bool brief) { () -> void } -> void

  def self.pbDisplayStatic: (Window_AdvancedTextPokemon msgwindow, String message) { () -> void } -> void

  # Letter by letter display of the message _msg_ by the window _helpwindow_,
  # used to ask questions.  Returns true if the user chose yes, false if no.
  def self.pbConfirm: (Window_AdvancedTextPokemon helpwindow, String msg) { () -> void } -> bool

  def self.pbChooseNumber: (Window_AdvancedTextPokemon helpwindow, String helptext, Integer maximum, ?Integer initnum) { () -> void } -> Integer

  def self.pbShowCommands: (Window_AdvancedTextPokemon helpwindow, String helptext, Array[String] commands, ?Integer initcmd) { () -> void } -> Integer
end


