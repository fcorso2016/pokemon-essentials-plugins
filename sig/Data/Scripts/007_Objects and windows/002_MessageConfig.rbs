# TypeProf 0.21.3

# Classes
class Object
  private
  def pbBottomRight: (Window window) -> void
  def pbBottomLeft: (Window window) -> void
  def pbBottomLeftLines: (Window window, Integer lines, ?Integer? width) -> void
  def pbPositionFaceWindow: (Window facewindow, Window msgwindow) -> void
  def pbPositionNearMsgWindow: (Window cmdwindow, Window msgwindow, Symbol side) -> void
  def pbRepositionMessageWindow: (Window msgwindow, ?Integer linecount) -> void
  def pbUpdateMsgWindowPos: (Window msgwindow, Game_Event event, ?bool eventChanged) -> void
  def isDarkBackground: (Bitmap? background, ?Rect? rect) -> bool
  def isDarkWindowskin: (Bitmap windowskin) -> bool
  def getSkinColor: (Bitmap windowskin, Color color, bool isDarkSkin) -> Color
  def getDefaultTextColors: (Bitmap windowskin) -> [Color, Color]
  def pbDoEnsureBitmap: (Bitmap bitmap, Integer dwidth, Integer dheight) -> Bitmap
  def pbSetSystemFont: (Bitmap bitmap) -> void
  def pbSetSmallFont: (Bitmap bitmap) -> void
  def pbSetNarrowFont: (Bitmap bitmap) -> void
  def pbAlphaBlend: (Color dstColor, Color srcColor) -> Color
  def pbSrcOver: (Color dstColor, Color srcColor) -> Color
  def pbSetSpritesToColor: (Hash[String, _Visualizable] sprites, Color color) -> void
  def using: (Window window) -> void
  def pbUpdateSpriteHash: (Hash[String, _Visualizable] windows) -> void
  def pbDisposeSpriteHash: (Hash[String, _Visualizable] sprites) -> void
  def pbDisposeSprite: (Hash[String, _Visualizable] sprites, Integer id) -> void
  def pbDisposed?: (_CheckedDisposable x) -> bool
  def pbPushFade: -> void
  def pbPopFade: -> void
  def pbIsFaded?: -> bool
  def pbFadeOutIn: (?Integer z, ?bool nofadeout) ?{ -> void } -> void
  def pbFadeOutInWithUpdate: (Integer z, Hash[String, _Visualizable] sprites, ?bool nofadeout) -> void
  def pbFadeOutInWithMusic: (?Integer zViewport) -> void
  def pbFadeOutAndHide: (Hash[String, _Visualizable] sprites) -> Hash[String, _Visualizable]
  def pbFadeInAndShow: (Hash[String, _Visualizable] sprites, ?Hash[String, _Visualizable]? visiblesprites) -> void
  def pbRestoreActivations: (Hash[String, _Visualizable] sprites, Hash[String, _Visualizable] activeStatuses) -> void
  def pbDeactivateWindows: (Hash[String, _Visualizable] sprites) { -> void } -> void
  def pbActivateWindow: (Hash[String, _Visualizable] sprites, String? key) { -> void } -> void
  def addBackgroundPlane: (Hash[String, _Visualizable] sprites, String planename, String background, ?Viewport? viewport) -> void
  def addBackgroundOrColoredPlane: (Hash[String, _Visualizable] sprites, String planename, String background, Color color, ?Viewport? viewport) -> void
end

module MessageConfig
  LIGHT_TEXT_MAIN_COLOR: Color
  LIGHT_TEXT_SHADOW_COLOR: Color
  DARK_TEXT_MAIN_COLOR: Color
  DARK_TEXT_SHADOW_COLOR: Color
  MALE_TEXT_MAIN_COLOR: Color
  MALE_TEXT_SHADOW_COLOR: Color
  FEMALE_TEXT_MAIN_COLOR: Color
  FEMALE_TEXT_SHADOW_COLOR: Color
  FONT_NAME: String
  FONT_SIZE: Integer
  FONT_Y_OFFSET: Integer
  SMALL_FONT_NAME: String
  SMALL_FONT_SIZE: Integer
  SMALL_FONT_Y_OFFSET: Integer
  NARROW_FONT_NAME: String
  NARROW_FONT_SIZE: Integer
  NARROW_FONT_Y_OFFSET: Integer
  CURSOR_POSITION: Integer
  WINDOW_OPACITY: Integer
  TEXT_SPEED: Numeric?
  @@systemFrame: String?
  @@defaultTextSkin: String?
  @@textSpeed: Numeric?
  @@systemFont: String?
  @@smallFont: String?
  @@narrowFont: String?

  def self.pbDefaultSystemFrame: -> String
  def self.pbDefaultSpeechFrame: -> String
  def self.pbDefaultWindowskin: -> String
  def self.pbGetSystemFrame: -> String
  def self.pbGetSpeechFrame: -> String
  def self.pbSetSystemFrame: (String value) -> String
  def self.pbSetSpeechFrame: (String value) -> String
  def self.pbDefaultTextSpeed: -> Numeric
  def self.pbGetTextSpeed: -> Numeric?
  def self.pbSetTextSpeed: (Numeric value) -> Numeric
  def self.pbSettingToTextSpeed: (Integer speed) -> Numeric
  def self.pbDefaultSystemFontName: -> String
  def self.pbDefaultSmallFontName: -> String
  def self.pbDefaultNarrowFontName: -> String
  def self.pbGetSystemFontName: -> String
  def self.pbGetSmallFontName: -> String
  def self.pbGetNarrowFontName: -> String
  def self.pbSetSystemFontName: (String value) -> String
  def self.pbSetSmallFontName: (String value) -> String
  def self.pbSetNarrowFontName: (String value) -> String
  def self.pbTryFonts: (*String args) -> String
end


