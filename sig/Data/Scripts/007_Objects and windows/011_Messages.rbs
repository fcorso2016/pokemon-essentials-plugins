# TypeProf 0.21.3

# Classes
class Object
  private
  def pbMapInterpreter: -> Interpreter
  def pbMapInterpreterRunning?: -> bool
  def pbRefreshSceneMap: -> void
  def pbUpdateSceneMap: -> void
  def pbEventCommentInput: [T] (RPG::Event::Page | RPG::CommonEvent event, Integer num_elements, T trigger) -> Array[untyped]?
  def pbCurrentEventCommentInput: [T] (Integer elements, T trigger) -> void
  def pbChooseNumber: (Window_AdvancedTextPokemon msgwindow, ChooseNumberParams params) -> Integer
  def pbGetBasicMapNameFromId: (Integer id) -> String
  def pbGetMapNameFromId: (Integer id) -> String
  def pbCsvField!: (String str) -> String
  def pbCsvPosInt!: (String str) -> Integer
  def pbGetGoldString: -> String
  def pbDisplayGoldWindow: (Window_AdvancedTextPokemon msgwindow) -> Window_AdvancedTextPokemon
  def pbDisplayCoinsWindow: (Window_AdvancedTextPokemon msgwindow, Window_AdvancedTextPokemon? goldwindow) -> Window_AdvancedTextPokemon
  def pbDisplayBattlePointsWindow: (Window_AdvancedTextPokemon msgwindow) -> Window_AdvancedTextPokemon
  def pbCreateStatusWindow: (?Viewport? viewport) -> Window_AdvancedTextPokemon
  def pbCreateMessageWindow: (?Viewport? viewport, ?String? skin) -> Window_AdvancedTextPokemon
  def pbDisposeMessageWindow: (Window_AdvancedTextPokemon msgwindow) -> Window_AdvancedTextPokemon
  def pbMessageDisplay: (Window_AdvancedTextPokemon msgwindow, String message, ?bool letterbyletter, ?(^(Window_AdvancedTextPokemon) -> Integer)? commandProc) -> Integer |
    (Window_AdvancedTextPokemon msgwindow, String message, ?bool letterbyletter, ?(^(Window_AdvancedTextPokemon) -> Integer)? commandProc) -> String
  def pbMessage: (String message, ?Array[String]? commands, ?Integer cmdIfCancel, ?String? skin, ?Integer defaultCmd) {(Window_AdvancedTextPokemon) -> Integer} -> Integer
  def pbConfirmMessage: (String message) {(Window_AdvancedTextPokemon) -> Integer} -> bool
  def pbConfirmMessageSerious: (String message) {(Window_AdvancedTextPokemon) -> Integer} -> bool
  def pbMessageChooseNumber: (String message, ChooseNumberParams params) -> Integer
  def pbShowCommands: (Window_AdvancedTextPokemon msgwindow, ?Array[String]? commands, ?Integer cmdIfCancel, ?Integer defaultCmd) -> Integer
  def pbShowCommandsWithHelp: (Window_AdvancedTextPokemon msgwindow, Array[String] commands, Array[String] help, ?Integer cmdIfCancel, ?Integer defaultCmd) -> Integer
  def pbMessageWaitForInput: (Window_AdvancedTextPokemon msgwindow, Integer frames, ?bool showPause) -> void
  def pbFreeText: (Window_AdvancedTextPokemon msgwindow, String currenttext, Window_TextEntry | false passwordbox, Integer maxlength, ?Integer width) { () -> String } -> String
  def pbMessageFreeText: (String message, String currenttext, Window_TextEntry | false passwordbox, Integer maxlength, ?Integer width) { (Window_AdvancedTextPokemon) -> String} -> String
end

class ChooseNumberParams
  @maxDigits: Integer
  @minNumber: Integer
  @maxNumber: Integer
  @negativesAllowed: bool
  @initialNumber: Integer
  @cancelNumber: Integer?
  @negativeAllowed: boolish

  attr_reader messageSkin: String?
  attr_reader skin: String?
  def initialize: -> void
  def setMessageSkin: (String value) -> void
  def setSkin: (String value) -> void
  def setNegativesAllowed: (boolish value) -> void
  def negativesAllowed: -> bool
  def setRange: (Integer minNumber, Integer maxNumber) -> void
  def setDefaultValue: (Integer number) -> void
  def setInitialValue: (Integer number) -> void
  def setCancelValue: (Integer number) -> void
  def initialNumber: -> Integer
  def cancelNumber: -> Integer
  def minNumber: -> Integer
  def maxNumber: -> Integer
  def setMaxDigits: (Integer value) -> void
  def maxDigits: -> Integer?

  private
  def numDigits: (Integer number) -> Integer
end

class FaceWindowVX < SpriteWindow_Base

  @faceIndex: Integer
  @facebitmaptmp: AnimatedBitmap
  @facebitmap: Bitmap

  def initialize: (String face) -> void
end

