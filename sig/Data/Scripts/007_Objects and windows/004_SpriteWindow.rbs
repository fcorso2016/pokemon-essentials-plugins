# TypeProf 0.21.3

# Classes
class SpriteWindow < Window

  @trim: [Integer, Integer, Integer, Integer]
  @flash_duration: Math::double
  @pauseopacity: Math::double?
  @flash_timer_start: Math::double?
  @combat: bool

  attr_reader tone: Tone
  attr_reader color: Color
  attr_reader zoom_x: Math::double
  attr_reader zoom_y: Math::double
  attr_reader offset_x: Integer
  attr_reader offset_y: Integer
  attr_reader cursor_rect: Rect
  attr_reader contents_blend_type: Integer
  attr_reader blend_type: Integer
  attr_reader openness: Math::double
  def windowskin: -> Bitmap?
  attr_reader compat: Integer
  attr_reader skinformat: Integer
  attr_reader skinrect: Rect
  def compat=: (Integer value) -> void
  def stretch=: (Math::double value) -> void
  def visible=: (bool value) -> void
  def viewport=: (Viewport? value) -> void
  def z=: (Integer value) -> void
  def contents=: (Bitmap? value) -> void
  def ox=: (Integer value) -> void
  def oy=: (Integer value) -> void
  def active=: (bool value) -> void
  def cursor_rect=: (WindowCursorRect value) -> untyped
  def openness=: (Math::double value) -> void
  def width=: (Integer value) -> void
  def height=: (Integer value) -> void
  def pause=: (bool value) -> void
  def x=: (Integer value) -> void
  def y=: (Integer value) -> void
  def zoom_x=: (Math::double value) -> void
  def zoom_y=: (Math::double value) -> void
  def offset_x=: (Integer value) -> void
  def offset_y=: (Integer value) -> void
  def opacity=: (Math::double value) -> void
  def back_opacity=: (Math::double value) -> void
  def contents_opacity=: (Math::double value) -> void
  def tone=: (Tone value) -> void
  def color=: (Color value) -> void
  def blend_type=: (Integer value) -> void
  def flash: (Color color, Math::double duration) -> void
  def loadSkinFile: (String _file) -> void
  def windowskin=: (Bitmap? value) -> void
  def skinrect=: (Rect value) -> void
  def skinformat=: (Integer value) -> void
  def borderX: -> Math::double
  def borderY: -> Math::double
  def leftEdge: -> Integer
  def topEdge: -> Integer
  def rightEdge: -> Math::double
  def bottomEdge: -> Math::double
  def startX: -> Integer
  def startY: -> Integer
  def endX: -> Integer
  def endY: -> Integer
  def startX=: (Integer value) -> void
  def startY=: (Integer value) -> void
  def endX=: (Integer value) -> void
  def endY=: (Integer value) -> void

  private
  def ensureBitmap: (Bitmap? bitmap, Integer dwidth, Integer dheight) -> void
  def tileBitmap: (Bitmap dstbitmap, Rect dstrect, Bitmap? srcbitmap, Rect srcrect) -> void
  def privRefreshCursor: -> void
  def privRefresh: (?bool changeBitmap) -> void

  module CompatBits
    CORRECT_Z: Integer
    EXPAND_BACK: Integer
    SHOW_SCROLL_ARROWS: Integer
    STRETCH_SIDES: Integer
    SHOW_PAUSE: Integer
    SHOW_CURSOR: Integer
  end
end

class SpriteWindow_Base < SpriteWindow
  TEXT_PADDING: Integer
  @curframe: String
  @curfont: String
  @sysframe: AnimatedBitmap?
  @customskin: AnimatedBitmap?
  @resolvedFrame: AnimatedBitmap?

  def initialize: (Integer x, Integer y, Integer width, Integer height) -> void
  def __setWindowskin: (Bitmap skin) -> void
  def __resolveSystemFrame: -> void
  def setSkin: (String skin) -> void
  def setSystemFrame: -> void
end



