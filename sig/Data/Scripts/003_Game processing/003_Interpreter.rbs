# TypeProf 0.21.3

# Classes
class Interpreter
  include _Inspectable

  @depth: Integer
  @main: bool
  @map_id: Integer
  @event_id: Integer
  @message_waiting: bool
  @move_route_waiting: bool
  @wait_count: Integer
  @wait_start: Integer
  @child_interpreter: Interpreter?
  @branch: Hash[Integer, Integer]
  @buttonInput: bool
  @hidden_choices: Array[String]
  @renamed_choices: Array[String]
  @follower_move_route: bool
  @follower_move_route_id: Integer?
  @follower_animation: bool
  @follower_animation_id: Integer?
  @list: Array[RPG::EventCommand]
  @index: Integer
  @loop_count: Integer

  def initialize: (?Integer depth, ?bool main) -> void
  def clear: -> void
  def setup: (Array[RPG::EventCommand] list, Integer event_id, ?Integer? map_id) -> void
  def setup_starting_event: -> void
  def running?: -> bool
  def update: -> void
  def execute_script: (String script) -> void
  def get_character: (?Integer parameter) -> Game_Character
  def get_player: -> Game_Character
  def get_self: -> Game_Character
  def get_event: (Integer parameter) -> Game_Character
  def pbGlobalLock: -> void
  def pbGlobalUnlock: -> void
  def pbNextIndex: (Integer index) -> Integer
  def pbRepeatAbove: (Integer index) -> Integer
  def pbBreakLoop: (Integer index) -> Integer
  def pbJumpToLabel: (Integer index, String label_name) -> Integer
  def follower_move_route: (?Integer? id) -> void
  def follower_animation: (?Integer? id) -> void
  def end_follower_overrides: -> void
  def pbShowPicture: (Integer number, String name, Integer origin, Integer x, Integer y, ?Integer zoomX, ?Integer zoomY, ?Integer opacity, ?Integer blendType) -> void
  def pbEraseThisEvent: -> bool
  def pbCommonEvent: (Integer id) -> void
  def pbSetSelfSwitch: (Integer eventid, String switch_name, bool value, ?Integer mapid) -> void
  def tsOff?: (String c) -> bool
  alias isTempSwitchOff? tsOff?
  def tsOn?: (String c) -> bool
  alias isTempSwitchOn? tsOn?
  def setTempSwitchOn: (String c) -> void
  def setTempSwitchOff: (String c) -> void
  def getVariable: (Integer id) -> bool |
                   () -> bool
  def setVariable: (Integer arg) -> void |
                   () -> bool
  def pbGetPokemon: (Integer id) -> Pokemon
  def pbSetEventTime: (*Integer ids) -> void
  def pbPushThisEvent: (?bool strength) -> void
  def pbPushThisBoulder: -> void
  def pbSmashThisEvent: -> void
  def pbTrainerIntro: (Symbol symbol) -> void
  def pbTrainerEnd: -> void
  def setPrice: (Symbol item, ?Integer buy_price, ?Integer sell_price) -> void
  def setSellPrice: (Symbol item, Integer sell_price) -> void
end


