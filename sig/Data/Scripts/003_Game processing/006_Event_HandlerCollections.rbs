# TypeProf 0.21.3

# Classes
module EventHandlers
  @@events: Hash[Symbol, NamedEvent]

  def self.add: (Symbol event, String key, Proc proc) -> void
  def self.remove: (Symbol event, String key) -> void
  def self.clear: (Symbol key) -> void
  def self.trigger: (Symbol event, *untyped args) -> void
end

module MenuHandlers
  @@handlers: Hash[Symbol, HandlerHash[Symbol]]

  def self.add: (Symbol menu, Symbol option, Hash[String, untyped] hash) -> void
  def self.remove: (Symbol menu, Symbol option) -> void
  def self.clear: (Symbol menu) -> void
  def self.each: (Symbol menu) -> void
  def self.each_available: (Symbol menu, *untyped args) { (Symbol, HandlerHash[Symbol], String) -> void } -> void
  def self.call: (Symbol menu, Symbol option, String function, *untyped args) -> void
end



