# TypeProf 0.21.3

# Classes
class Object
  private
  def pbScrollMap: (Integer direction, Integer distance, ?Numeric speed) -> void
  def pbScrollMapTo: (Integer x, Integer y, ?Numeric speed) -> void
  def pbScrollMapToPlayer: (?Numeric speed) -> void
end

class Game_Map
  TILE_WIDTH: Integer
  TILE_HEIGHT: Integer
  X_SUBPIXELS: Integer
  Y_SUBPIXELS: Integer
  REAL_RES_X: Integer
  REAL_RES_Y: Integer
  @map: RPG::Map
  @fog_tone_target: Tone
  @fog_tone_duration: Integer
  @fog_tone_timer_start: Numeric?
  @fog_opacity_duration: Numeric
  @fog_opacity_target: Integer
  @fog_opacity_timer_start: Numeric?
  @common_events: Hash[Integer, Game_CommonEvent]
  @scroll_distance_x: Integer
  @scroll_distance_y: Integer
  @scroll_speed: Integer
  @scroll_start_x: Numeric?
  @scroll_start_y: Numeric?
  @scroll_timer_start: Numeric
  @fog_tone_initial: Tone?
  @fog_opacity_initial: Numeric?
  @fog_scroll_last_update_timer: Numeric

  attr_accessor map_id: Integer
  attr_accessor tileset_name: String
  attr_accessor autotile_names: Array[String]
  attr_reader passages: Table
  attr_reader priorities: Table
  attr_reader terrain_tags: Table
  attr_reader events: Hash[Integer, Game_Event]
  attr_accessor panorama_name: String
  attr_accessor panorama_hue: Numeric
  attr_accessor fog_name: String
  attr_accessor fog_hue: Numeric
  attr_accessor fog_opacity: Numeric
  attr_accessor fog_blend_type: Integer
  attr_accessor fog_zoom: Numeric
  attr_accessor fog_sx: Numeric
  attr_accessor fog_sy: Numeric
  attr_reader fog_ox: Numeric
  attr_reader fog_oy: Numeric
  attr_reader fog_tone: Tone
  attr_accessor battleback_name: String
  attr_reader display_x: Numeric?
  attr_reader display_y: Numeric?
  attr_accessor need_refresh: bool
  def initialize: -> void
  def setup: (Integer map_id) -> void
  def updateTileset: -> void
  def width: -> Integer
  def height: -> Integer
  def encounter_list: -> Array[Integer]
  def encounter_step: -> Integer
  def data: -> Table
  def tileset_id: -> Integer
  def bgm: -> RPG::AudioFile
  def name: -> String
  def metadata: -> GameData::MapMetadata?
  def bgm_name: -> String
  def autoplayAsCue: -> void
  def autoplay: -> void
  def valid?: (Integer x, Integer y) -> bool
  def validLax?: (Integer x, Integer y) -> bool
  def passable?: (Integer x, Integer y, Integer d, ?Game_Event? self_event) -> bool
  def playerPassable?: (Integer x, Integer y, Integer d, ?nil self_event) -> bool
  def passableStrict?: (Integer x, Integer y, Integer d, ?nil self_event) -> bool
  def bush?: (Integer x, Integer y) -> bool
  def deepBush?: (Integer x, Integer y) -> bool
  def counter?: (Integer x, Integer y) -> bool
  def terrain_tag: (Integer x, Integer y, ?bool countBridge) -> Integer
  def check_event: (Integer x, Integer y) -> Integer
  def display_x=: (Integer value) -> void
  def display_y=: (Integer value) -> void
  def scroll_up: (Integer distance) -> void
  def scroll_down: (Integer distance) -> void
  def scroll_left: (Integer distance) -> void
  def scroll_right: (Integer distance) -> void
  def start_scroll: (Integer direction, Integer distance, ?Integer speed) -> void
  def start_scroll_custom: (Integer distance_x, Integer distance_y, ?Integer speed) -> void
  def scrolling?: -> bool
  def start_fog_tone_change: (Tone tone, Numeric duration) -> void
  def start_fog_opacity_change: (Numeric opacity, Numeric duration) -> void
  def set_tile: (Integer x, Integer y, Integer layer, ?Integer id) -> void
  def erase_tile: (Integer x, Integer y, Integer layer) -> void
  def refresh: -> void
  def update: -> void
end



