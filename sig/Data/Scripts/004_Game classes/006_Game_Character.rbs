# TypeProf 0.21.3

# Classes
class Game_Character
  @map: Game_Map
  @original_direction: Integer
  @original_pattern: Integer
  @move_type: Integer
  @move_time: Numeric
  @move_frequency: Integer
  @jump_time: Numeric
  @move_route: RPG::MoveRoute?
  @move_route_index: Integer
  @original_move_route: RPG::MoveRoute?
  @original_move_route_index: Integer
  @step_anime: bool
  @direction_fix: bool
  @always_on_top: bool
  @anime_count: Integer
  @stop_count: Integer
  @bumping: bool
  @jump_peak: Integer
  @jump_distance: Integer?
  @jump_fraction: Numeric
  @jumping_on_spot: bool
  @wait_count: Integer
  @wait_start: Numeric
  @moved_this_frame: bool
  @moveto_happened: bool
  @locked: bool
  @prelock_direction: Integer
  @command_delay: Numeric
  @jump_timer: Numeric?
  @bush_depth: Integer
  @move_timer: Numeric?
  @oldX: Integer
  @oldY: Integer
  @oldMap: Game_Map
  @move_initial_x: Numeric
  @move_initial_y: Numeric
  @jump_initial_x: Numeric
  @jump_initial_y: Numeric
  @last_update_time: Numeric
  @delta_t: Numeric
  @moved_last_frame: bool
  @stopped_this_frame: bool
  @stopped_last_frame: bool?
  @starting: bot

  attr_reader id: Integer
  attr_reader original_x: Integer
  attr_reader original_y: Integer
  attr_reader x: Integer
  attr_reader y: Integer
  attr_reader real_x: Numeric
  attr_reader real_y: Numeric
  attr_writer x_offset: Integer
  attr_writer y_offset: Integer
  attr_accessor width: Integer
  attr_accessor height: Integer
  attr_accessor sprite_size: [Integer, Integer]
  attr_reader tile_id: Integer
  attr_accessor character_name: String
  attr_accessor character_hue: Integer
  attr_accessor opacity: Integer
  attr_reader blend_type: Integer
  attr_accessor direction: Integer
  attr_accessor pattern: Integer
  attr_accessor pattern_surf: Integer
  attr_accessor lock_pattern: bool
  attr_reader move_route_forcing: bool
  attr_accessor through: bool
  attr_accessor animation_id: Integer
  attr_accessor transparent: false
  attr_reader move_speed: Numeric
  attr_reader jump_speed: Numeric
  attr_accessor walk_anime: bool
  attr_writer bob_height: Integer
  def initialize: (?Game_Map? map) -> void
  def x_offset: -> Integer
  def y_offset: -> Integer
  def at_coordinate?: (Integer check_x, Integer check_y) -> void
  def in_line_with_coordinate?: (Integer check_x, Integer check_y) -> void
  def each_occupied_tile: ?{ (Integer, Integer) -> void } -> void
  def move_speed=: (Numeric val) -> void
  def jump_speed=: (Numeric val) -> void
  def pattern_update_speed: -> Numeric
  def move_frequency=: (Integer val) -> void
  def bob_height: -> Integer
  def lock: -> void
  def minilock: -> void
  def lock?: -> bool
  def unlock: -> Integer?
  def map: -> nil
  def terrain_tag: -> Integer
  def bush_depth: -> Integer
  def calculate_bush_depth: -> Integer?
  def fullPattern: -> Integer
  def passable?: (Integer x, Integer y, Integer d, ?bool strict) -> bool
  def can_move_from_coordinate?: (Integer start_x, Integer start_y, Integer dir, ?bool strict) -> bool
  def can_move_in_direction?: (Integer dir, ?bool strict) -> bool
  def screen_x: -> Integer
  def screen_y_ground: -> Integer
  def screen_y: -> Integer
  def screen_z: (?Integer height) -> Integer
  def moving?: -> bool
  def jumping?: -> bool
  def straighten: -> void
  def force_move_route: (untyped move_route) -> void
  def moveto: (Integer x, Integer y) -> void
  def triggerLeaveTile: -> void
  def increase_steps: -> void
  def move_type_random: -> void
  def move_type_toward_player: -> void
  def move_type_custom: -> void
  def move_generic: (Integer dir, ?bool turn_enabled) -> void
  def move_down: (?bool turn_enabled) -> void
  def move_left: (?bool turn_enabled) -> void
  def move_right: (?bool turn_enabled) -> void
  def move_up: (?bool turn_enabled) -> void
  def move_upper_left: -> void
  def move_upper_right: -> void
  def move_lower_left: -> void
  def move_lower_right: -> void
  def moveLeft90: -> void
  def moveRight90: -> void
  def move_random: -> void
  def move_random_range: (?Integer xrange, ?Integer yrange) -> void
  def move_random_UD: (?Integer range) -> void
  def move_random_LR: (?Integer range) -> void
  def move_toward_player: -> void
  def move_away_from_player: -> void
  def move_forward: -> void
  def move_backward: -> bool
  def jump: (Integer x_plus, Integer y_plus) -> void
  def jumpForward: (?Integer distance) -> void
  def jumpBackward: (?Integer distance) -> void
  def turn_generic: (Integer dir) -> void
  def turn_down: -> void
  def turn_left: -> void
  def turn_right: -> void
  def turn_up: -> void
  def turn_right_90: -> void
  def turn_left_90: -> void
  def turn_180: -> void
  def turn_right_or_left_90: -> void
  def turn_random: -> void
  def turn_toward_player: -> void
  def turn_away_from_player: -> void
  def update: -> void
  def update_command: -> void
  def update_command_new: ->void
  def update_move: -> void
  def update_stop: -> void
  def update_pattern: -> void
end


