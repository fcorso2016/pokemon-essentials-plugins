# TypeProf 0.21.3

# Classes
module GameData
  class TerrainTag
    type schema = {
        :id => Symbol,
        :id_number => Integer,
        :can_surf => bool,
        :waterfall => bool,
        :waterfall_crest => bool,
        :can_fish => bool,
        :can_dive => bool,
        :deep_bush => bool,
        :shows_grass_rustle => bool,
        :land_wild_encounters => bool,
        :double_wild_encounters => bool,
        :battle_environment => Symbol,
        :ledge => bool,
        :ice => bool,
        :bridge => bool,
        :shows_reflections => bool,
        :must_walk => bool,
        :must_walk_or_run => bool,
        :ignore_passability => bool
      }
    DATA: Hash[Symbol, TerrainTag]

    extend ClassMethods[schema]
    include InstanceMethods

    attr_reader id: Symbol
    attr_reader id_number: Integer
    attr_reader real_name: String
    attr_reader can_surf: bool
    attr_reader waterfall: bool
    attr_reader waterfall_crest: bool
    attr_reader can_fish: bool
    attr_reader can_dive: bool
    attr_reader deep_bush: bool
    attr_reader shows_grass_rustle: bool
    attr_reader land_wild_encounters: bool
    attr_reader double_wild_encounters: bool
    attr_reader battle_environment: Symbol
    attr_reader ledge: bool
    attr_reader ice: bool
    attr_reader bridge: bool
    attr_reader shows_reflections: bool
    attr_reader must_walk: bool
    attr_reader must_walk_or_run: bool
    attr_reader ignore_passability: bool
    def self.load: -> void
    def self.save: -> void
    def initialize: (schema hash) -> void
    alias name real_name
    def can_surf_freely: -> bool
  end
end



