# TypeProf 0.21.3

# Classes
module GameData
  class Target
    type target_count = 0 | 1 | 2
    type schema = {
        :id => Symbol,
        :name => String,
        :num_targets => target_count,
        :targets_foe => bool,
        :targets_all => bool,
        :affects_foe_side => bool
      }
    DATA: Hash[Symbol, Target]

    extend ClassMethodsSymbols[schema]
    include InstanceMethods

    attr_reader id: Symbol
    attr_reader real_name: String
    attr_reader num_targets: target_count
    attr_reader targets_foe: bool
    attr_reader targets_all: bool
    attr_reader affects_foe_side: bool
    attr_reader long_range: bool
    def self.load: -> void
    def self.save: -> void
    def initialize: (schema hash) -> void
    def name: -> String
    def can_choose_distant_target?: -> bool
    def can_target_one_foe?: -> bool
  end
end



