# TypeProf 0.21.3

# Classes
module GameData
  class SpeciesMetrics
    type schema = {
        :id => Symbol,
        :species => Symbol,
        :form => Integer,
        :back_sprite => [Integer, Integer],
        :front_sprite => [Integer, Integer],
        :front_sprite_altitude => Integer,
        :shadow_x => Integer,
        :shadow_size => Integer,
        :pbs_file_suffix => String
      }
    DATA: Hash[Symbol, SpeciesMetrics]
    DATA_FILENAME: String
    PBS_BASE_FILENAME: String
    SCHEMA: Hash[String, [Symbol, String, Symbol]]

    extend ClassMethodsSymbols[schema, SpeciesMetrics]
    include InstanceMethods

    attr_reader id: Symbol
    attr_reader species: Symbol
    attr_reader form: Integer
    attr_accessor back_sprite: [Integer, Integer]
    attr_accessor front_sprite: [Integer, Integer]
    attr_accessor front_sprite_altitude: Integer
    attr_accessor shadow_x: Integer
    attr_accessor shadow_size: Integer
    attr_reader pbs_file_suffix: String
    def self.get_species_form: (Symbol species, Integer form) -> SpeciesMetrics?
    def initialize: (schema hash) -> void
    def apply_metrics_to_sprite: (Sprite sprite, Integer index, ?bool shadow) -> untyped
    def shows_shadow?: -> true

    alias __orig__get_property_for_PBS get_property_for_PBS
  end
end



