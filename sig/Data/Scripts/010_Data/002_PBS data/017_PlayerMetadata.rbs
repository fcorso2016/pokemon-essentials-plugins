# TypeProf 0.21.3

# Classes
module GameData
  class PlayerMetadata
    type schema = {
        :id => Integer,
        :trainer_type => Symbol,
        :walk_charset => String,
        :run_charset => String,
        :cycle_charset => String,
        :surf_charset => String,
        :dive_charset => String,
        :fish_charset => String,
        :surf_fish_charset => String,
        :home => [Integer, Integer, Integer, Integer],
        :pbs_file_suffix => String
      }
    DATA: Hash[Integer, PlayerMetadata]
    DATA_FILENAME: String
    SCHEMA: Hash[String, [Symbol, String, Symbol]]
    @run_charset: String
    @cycle_charset: String
    @surf_charset: String
    @dive_charset: String
    @fish_charset: String
    @surf_fish_charset: String

    extend ClassMethodsIDNumbers[schema]
    include InstanceMethods

    attr_reader id: Integer
    attr_reader trainer_type: Symbol
    attr_reader walk_charset: String
    attr_reader home: [Integer, Integer, Integer, Integer]
    attr_reader pbs_file_suffix: String
    def self.editor_properties: [T < Array[[String, untyped, String]]] -> T
    def self.get: (?Integer player_id) -> PlayerMetadata?
    def initialize: (schema hash) -> void
    def run_charset: -> String
    def cycle_charset: -> String
    def surf_charset: -> String
    def dive_charset: -> String
    def fish_charset: -> String
    def surf_fish_charset: -> String
    alias __orig__get_property_for_PBS get_property_for_PBS
  end
end


