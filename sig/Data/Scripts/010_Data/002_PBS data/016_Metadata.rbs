# TypeProf 0.21.3

# Classes
module GameData
  class Metadata
    type schema = {
        :id => Integer,
        :start_money => Integer,
        :start_item_storage => Array[Symbol],
        :home => [Integer, Integer, Integer, Integer],
        :real_storage_creator => String,
        :wild_battle_BGM => String,
        :trainer_battle_BGM => String,
        :wild_victory_BGM => String,
        :trainer_victory_BGM => String,
        :wild_capture_ME => String,
        :surf_BGM => String,
        :bicycle_BGM => String,
        :pbs_file_suffix => String
      }
    DATA: Hash[Integer, Metadata]
    DATA_FILENAME: String
    PBS_BASE_FILENAME: String
    SCHEMA: Hash[String, [Symbol, String, Symbol]]

    extend ClassMethodsIDNumbers[schema, Metadata]
    include InstanceMethods[Integer, Metadata]

    attr_reader id: Integer
    attr_reader start_money: Integer
    attr_reader start_item_storage: Array[Symbol]
    attr_reader home: [Integer, Integer, Integer, Integer]
    attr_reader real_storage_creator: String
    attr_reader wild_battle_BGM: String
    attr_reader trainer_battle_BGM: String
    attr_reader wild_victory_BGM: String
    attr_reader trainer_victory_BGM: String
    attr_reader wild_capture_ME: String
    attr_reader surf_BGM: String
    attr_reader bicycle_BGM: String
    attr_reader pbs_file_suffix: String
    def self.editor_properties: [T < Array[[String, untyped, String]]] -> T
    def self.get: -> Metadata
    def initialize: (schema hash) -> void
    def storage_creator: -> String
  end
end



