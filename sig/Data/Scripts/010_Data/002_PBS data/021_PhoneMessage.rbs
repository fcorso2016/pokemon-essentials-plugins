# TypeProf 0.21.3

# Classes
module GameData
  class PhoneMessage
    type schema = {
        :id => Symbol,
        :trainer_type => Symbol,
        :real_name => String,
        :version => Integer,
        :intro => String,
        :intro_morning => String,
        :intro_afternoon => String,
        :intro_evening => String,
        :body => String,
        :body1 => String,
        :body2 => String,
        :battle_request => String,
        :battle_remind => String,
        :end => String,
        :pbs_file_suffix => String
      }
    DATA: Hash[Symbol, PhoneMessage]
    DATA_FILENAME: String
    PBS_BASE_FILENAME: String
    SCHEMA: Hash[String, [Symbol, String]]

    extend ClassMethodsSymbols[schema]
    include InstanceMethods

    attr_reader id: Symbol
    attr_reader trainer_type: Symbol
    attr_reader real_name: String
    attr_reader version: Integer
    attr_reader intro: String
    attr_reader intro_morning: String
    attr_reader intro_afternoon: String
    attr_reader intro_evening: String
    attr_reader body: String
    attr_reader body1: String
    attr_reader body2: String
    attr_reader battle_request: String
    attr_reader battle_remind: String
    attr_reader end: String
    attr_reader pbs_file_suffix: String
    def self.exists?: (Symbol tr_type, ?String? tr_name, ?Integer tr_version) -> bool
    def self.get: (Symbol tr_type, String tr_name, ?Integer tr_version) -> PhoneMessage
    def self.try_get: (Symbol tr_type, String tr_name, ?Integer tr_version) -> PhoneMessage?
    def initialize: (schema hash) -> void
    alias __orig__get_property_for_PBS get_property_for_PBS
  end
end



