# TypeProf 0.21.3

# Classes
module GameData
  class BerryPlant
    type schema = {
        :id => Symbol,
        :hours_per_stage => Integer,
        :drying_per_hour => Integer,
        :yield => [Integer, Integer],
        :pbs_file_suffix => String
      }
    DATA: Hash[Symbol, Symbol]
    DATA_FILENAME: String
    PBS_BASE_FILENAME: String
    SCHEMA: Hash[String, [Symbol, String]]
    NUMBER_OF_REPLANTS: Integer
    NUMBER_OF_GROWTH_STAGES: Integer
    NUMBER_OF_FULLY_GROWN_STAGES: Integer
    WATERING_CANS: Array[Symbol]

    extend ClassMethodsSymbols[schema]
    include InstanceMethods

    attr_reader id: Symbol
    attr_reader hours_per_stage: Integer
    attr_reader drying_per_hour: Integer
    attr_reader yield: [Integer, Integer]
    attr_reader pbs_file_suffix: String
    def initialize: (schema hash) -> void
    def minimum_yield: -> Integer
    def maximum_yield: -> Integer
  end
end



