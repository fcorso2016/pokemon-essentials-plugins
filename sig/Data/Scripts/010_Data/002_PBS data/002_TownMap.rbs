# TypeProf 0.21.3

# Classes
module GameData
  class TownMap
    type point_data = [Integer, Integer, String, Integer, Integer, Integer]
    type schema = {
        :id => Integer,
        :real_name => String,
        :filename => String,
        :point => Array[point_data],
        :flags => Array[String],
        :pbs_file_suffix => String
      }
    DATA: Hash[Integer, TownMap]
    DATA_FILENAME: String
    PBS_BASE_FILENAME: String
    SCHEMA: Hash[String, [Symbol, String]]

    extend ClassMethodsIDNumbers[schema]
    include InstanceMethods

    attr_reader id: Integer
    attr_reader real_name: String
    attr_reader filename: String
    attr_reader point: Array[point_data]
    attr_reader flags: Array[String]
    attr_reader pbs_file_suffix: String
    def initialize: (schema hash) -> void
    def name: -> String
    def has_flag?: (String flag) -> bool
  end
end


