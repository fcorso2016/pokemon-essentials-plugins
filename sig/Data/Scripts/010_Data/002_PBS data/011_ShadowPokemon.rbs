# TypeProf 0.21.3

# Classes
module GameData
  class ShadowPokemon
    type schema = {
        :id => Symbol,
        :species => Symbol,
        :form => Integer,
        :move => Array[Symbol],
        :gauge_size => Integer,
        :flags => Array[String],
        :pbs_file_suffix => String
      }
    DATA: Hash[Symbol, ShadowPokemon]
    DATA_FILENAME: String
    PBS_BASE_FILENAME: String
    OPTIONAL: bool
    SCHEMA: Hash[String, [Symbol, String, Symbol]]
    HEART_GAUGE_SIZE: Integer

    extend ClassMethodsSymbols[schema]
    include InstanceMethods

    attr_reader id: Symbol
    attr_reader species: Symbol
    attr_reader form: Integer
    attr_reader moves: Array[Symbol]
    attr_reader gauge_size: Integer
    attr_reader flags: Array[String]
    attr_reader pbs_file_suffix: String
    def self.load: -> void
    def self.get_species_form: (Symbol species, Integer form) -> ShadowPokemon?
    def initialize: (schema hash) -> void
    def has_flag?: (String flag) -> bool

    alias __orig__get_property_for_PBS get_property_for_PBS
  end
end



