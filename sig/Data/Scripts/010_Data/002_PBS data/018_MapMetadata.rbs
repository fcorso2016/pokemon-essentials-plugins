# TypeProf 0.21.3

# Classes
module GameData
  class MapMetadata
    type schema = {
        :id => Integer,
        :real_name => String,
        :outdoor_map => bool,
        :announce_location => bool,
        :can_bicycle => bool,
        :always_bicycle => bool,
        :teleport_destination => [Integer, Integer, Integer, Integer],
        :weather => Symbol,
        :town_map_position => [Integer, Integer],
        :dive_map_id => Integer,
        :dark_map => bool,
        :safari_map => bool,
        :snap_edges => bool,
        :still_reflections => bool,
        :random_dungeon => bool,
        :battle_background => String,
        :wild_battle_BGM => String,
        :trainer_battle_BGM => String,
        :wild_victory_BGM => String,
        :trainer_victory_BGM => String,
        :wild_capture_ME => String,
        :town_map_size => [Integer, String],
        :battle_environment => Symbol,
        :flags => Array[String],
        :pbs_file_suffix => String,
      }
    DATA: Hash[Integer, MapMetadata]
    DATA_FILENAME: String
    PBS_BASE_FILENAME: String
    SCHEMA: Hash[String, [Symbol, String, Symbol]]

    extend ClassMethodsIDNumbers[schema, MapMetadata]
    include InstanceMethods

    attr_reader id: Integer
    attr_reader real_name: String
    attr_reader outdoor_map: bool
    attr_reader announce_location: bool
    attr_reader can_bicycle: bool
    attr_reader always_bicycle: bool
    attr_reader teleport_destination: [Integer, Integer, Integer, Integer]
    attr_reader weather: Symbol
    attr_reader town_map_position: [Integer, Integer]
    attr_reader dive_map_id: Integer
    attr_reader dark_map: bool
    attr_reader safari_map: bool
    attr_reader snap_edges: bool
    attr_reader still_reflections: bool
    attr_reader random_dungeon: bool
    attr_reader battle_background: String
    attr_reader wild_battle_BGM: String
    attr_reader trainer_battle_BGM: String
    attr_reader wild_victory_BGM: String
    attr_reader trainer_victory_BGM: String
    attr_reader wild_capture_ME: String
    attr_reader town_map_size: [Integer, String]
    attr_reader battle_environment: Symbol
    attr_reader flags: Array[String]
    attr_reader pbs_file_suffix: String
    def self.editor_properties: [T < Array[[String, untyped, String]]] -> T
    def initialize: (schema hash) -> void
    def name: -> String
    def has_flag?: (String flag) -> bool
    alias __orig__get_property_for_PBS get_property_for_PBS
  end
end



