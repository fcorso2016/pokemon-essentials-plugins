# TypeProf 0.21.3

# Revealed types
#  .\005_Sprites\009_Sprite_DynamicShadows.rb:190 #=> String

# Classes
class Object
  private
  def XPML_read: (Game_Map? map, String markup, Game_Event? event, ?Integer max_param_number) -> Array[Integer | String]?
end

type shadow_data = [Sprite_Character, Integer, Integer, Integer, Integer]

class Sprite_Shadow < RPG::Sprite
  include _Updatable
  include _Disposable

  @source: Sprite
  @anglemin: Integer?
  @anglemax: Integer?
  @self_opacity: Integer?
  @distancemax: Integer?
  @tile_id: Integer
  @character_name: untyped
  @character_hue: untyped
  @chbitmap: untyped
  @ch: Integer
  @cw: Integer
  @deltax: untyped
  @deltay: untyped
  @distance: untyped
  @angle_trigo: untyped

  attr_accessor character: Game_Character?
  def initialize: (Viewport viewport, ?Game_Character? character, ?shadow_data params) -> void
  def in_range?: (nil element, nil object, Integer? range) -> untyped
end

class Sprite_Character
  @ombrelist: Array[Sprite_Shadow]

  alias shadow_initialize initialize
  def setShadows: (Game_Map? map, Array[shadow_data] shadows) -> void
  def clearShadows: -> void

  alias shadow_update update
end

class Game_Event
  attr_writer id: Integer
end

class Spriteset_Map
  attr_accessor shadows: Array[shadow_data]

  alias shadow_initialize initialize
end


