# ==============================================================================
# "Slot Machine" mini-game
# By Maruno
# ------------------------------------------------------------------------------
# Run with:      pbSlotMachine(1)
# - The number is either 0 (easy), 1 (default) or 2 (hard).
# ==============================================================================
class SlotMachineReel < BitmapSprite
  SCROLL_SPEED: Integer

  ICONS_SETS: Array[Array[Integer]]

  SLIPPING: ::Array[Integer]

  @current_y_pos: Integer
  @difficulty: Integer
  @images: AnimatedBitmap
  @index: Integer
  @initial_index: Integer
  @reel: Array[Integer]
  @reel_num: Integer

  @shading: AnimatedBitmap
  @slipping: Integer
  @spin_speed: Math::double
  @spin_timer_start: Math::double
  @spinning: bool
  @stopping: bool
  @toppos: Integer

  def initialize: (Integer x, Integer y, Integer reel_num, ?Integer difficulty) -> void

  def startSpinning: () -> void

  def spinning?: () -> bool

  def stopSpinning: (?bool noslipping) -> void

  def showing: () -> [Integer, Integer, Integer]
end

# ==============================================================================
#
# ==============================================================================
class SlotMachineScore < BitmapSprite
  include _Refreshable

  @numbers: AnimatedBitmap

  attr_reader score: Integer

  def initialize: (Integer x, Integer y, ?Integer score) -> void

  def score=: (Integer value) -> void
end

# ==============================================================================
#
# ==============================================================================
class SlotMachineScene
  include _PokeScene
  include _Updatable

  @sprites: Hash[String, _Visualizable]

  @viewport: Viewport

  attr_accessor gameRunning: bool

  attr_accessor gameEnd: bool

  attr_accessor wager: Integer

  attr_accessor replay: bool

  def pbPayout: () -> void

  def pbStartScene: (untyped difficulty) -> void

  def pbMain: () -> void
end

# ==============================================================================
#
# ==============================================================================
class SlotMachine
  include _PokeScreen

  @scene: SlotMachineScene

  def initialize: (SlotMachineScene scene) -> void

  def pbStartScreen: (Integer difficulty) -> void
end

class Object
  # ==============================================================================
  #
  # ==============================================================================
  def pbSlotMachine: (?Integer difficulty) -> void
end

