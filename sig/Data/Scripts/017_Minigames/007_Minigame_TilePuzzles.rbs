# ==============================================================================
# "Tile Puzzle" mini-games
# By Maruno
# Graphics by the__end
# ------------------------------------------------------------------------------
# Run with:      pbTilePuzzle(game,board,width,height)
# game = 1 (Ruins of Alph puzzle),
#        2 (Ruins of Alph puzzle plus tile rotations),
#        3 (Mystic Square),
#        4 (swap two adjacent tiles),
#        5 (swap two adjacent tiles plus tile rotations),
#        6 (Rubik's square),
#        7 (rotate selected tile plus adjacent tiles at once).
# board = The name/number of the graphics to be used.
# width,height = Optional, the number of tiles wide/high the puzzle is (0 for
#                the default value of 4).
# ==============================================================================
class TilePuzzleCursor < BitmapSprite
  attr_accessor game: untyped

  attr_accessor position: untyped

  attr_accessor arrows: untyped

  attr_accessor selected: untyped

  attr_accessor holding: untyped

  def initialize: (untyped game, untyped position, untyped tilewidth, untyped tileheight, untyped boardwidth, untyped boardheight) -> void

  def update: () -> untyped
end

# ==============================================================================
#
# ==============================================================================
class TilePuzzleScene
  def initialize: (untyped game, untyped board, untyped width, untyped height) -> void

  def update: () -> untyped

  def updateCursor: () -> untyped

  def pbStartScene: () -> untyped

  def pbShuffleTiles: () -> untyped

  def pbDefaultCursorPosition: () -> (untyped | 0)

  def pbMoveCursor: (untyped pos, untyped dir) -> untyped

  def pbCanMoveInDir?: (untyped pos, untyped dir, untyped swapping) -> (true | false)

  def pbRotateTile: (untyped pos, ?bool anim) -> (untyped | nil | untyped)

  def pbGetNearTiles: (untyped pos) -> untyped

  def pbSwapTiles: (untyped dir) -> (untyped | true)

  def pbShiftLine: (untyped dir, untyped cursor, ?bool anim) -> true

  def pbGrabTile: (untyped pos) -> untyped

  def pbCheckWin: () -> bool

  def pbMain: () -> untyped

  def pbEndScene: () -> untyped
end

# ==============================================================================
#
# ==============================================================================
class TilePuzzle
  def initialize: (untyped scene) -> void

  def pbStartScreen: () -> untyped
end

class Object
  # ==============================================================================
  #
  # ==============================================================================
  def pbTilePuzzle: (untyped game, untyped board, ?::Integer width, ?::Integer height) -> untyped
end


