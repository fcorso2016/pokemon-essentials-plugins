# ==============================================================================
# "Duel" mini-game
# Based on the Duel minigame by Alael
# ==============================================================================
class DuelWindow < Window_AdvancedTextPokemon
  attr_reader hp: Integer

  attr_reader name: String

  attr_reader is_enemy: bool

  PLAYER_TEXT_BASE: Color

  PLAYER_TEXT_SHADOW: Color

  ENEMY_TEXT_BASE: Color

  ENEMY_TEXT_SHADOW: Color

  HP_TEXT_BASE: Color

  HP_TEXT_SHADOW: Color

  def initialize: (String name, bool is_enemy) -> void

  def hp=: (Integer value) -> void

  def name=: (String value) -> void

  def is_enemy=: (bool value) -> void

  def duel_refresh: () -> void
end

# ==============================================================================
#
# ==============================================================================
class PokemonDuel

  @event: Game_Event

  @hp: [Integer, Integer]
  @oldeventspeed: number
  @oldmovespeed: number
  @special: [bool, bool]
  @sprites: Hash[String, _Visualizable]
  @viewport: Viewport

  def pbStartDuel: (Symbol | String | GameData::TrainerType opponent, Game_Event event) -> void

  def pbDuel: (Symbol | String | GameData::TrainerType opponent, Game_Event event, Array[String] speeches) -> Integer

  def pbEndDuel: () -> void

  def pbFlashScreens: (bool player, bool opponent) -> void

  def pbRefresh: () -> void
end

class Object
  # Starts a duel.
  # trainer_id - ID or symbol of the opponent's trainer type.
  # trainer_name - Name of the opponent
  # event - Game_Event object for the character's event
  # speeches - Array of 12 speeches
  def pbDuel: (Symbol | String | GameData::TrainerType trainer_id, String trainer_name, Game_Event event, Array[String] speeches) -> Integer
end

