# ==============================================================================
# Stores information about a PokÃƒÂ©mon's owner.
# ==============================================================================
class Pokemon
  class Owner
    # @return [Integer] the ID of the owner
    attr_reader id: Integer

    # @return [String] the name of the owner
    attr_reader name: String

    # @return [Integer] the gender of the owner (0 = male, 1 = female, 2 = unknown)
    attr_reader gender: Integer

    # @return [Integer] the language of the owner (see pbGetLanguage for language IDs)
    attr_reader language: Integer

    # @param id [Integer] the ID of the owner
    # @param name [String] the name of the owner
    # @param gender [Integer] the gender of the owner (0 = male, 1 = female, 2 = unknown)
    # @param language [Integer] the language of the owner (see pbGetLanguage for language IDs)
    def initialize: (Integer id, String name, Integer gender, Integer language) -> void

    # Returns a new Owner object populated with values taken from +trainer+.
    # @param trainer [Player, NPCTrainer] trainer object to read data from
    # @return [Owner] new Owner object
    def self.new_from_trainer: (Trainer trainer) -> Owner

    # Returns an Owner object with a foreign ID.
    # @param name [String] owner name
    # @param gender [Integer] owner gender
    # @param language [Integer] owner language
    # @return [Owner] foreign Owner object
    def self.new_foreign: (?String name, ?Integer gender, ?Integer language) -> Owner

    # @param new_id [Integer] new owner ID
    def id=: (Integer new_id) -> void

    # @param new_name [String] new owner name
    def name=: (String new_name) -> void

    # @param new_gender [Integer] new owner gender
    def gender=: (Integer new_gender) -> void

    # @param new_language [Integer] new owner language
    def language=: (Integer new_language) -> void

    # @return [Integer] the public portion of the owner's ID
    def public_id: () -> Integer
  end
end



