# ==============================================================================
#
# ==============================================================================
class BattleChallenge
  attr_reader currentChallenge: untyped

  BATTLE_TOWER_ID: 0

  BATTLE_PALACE_ID: 1

  BATTLE_ARENA_ID: 2

  BATTLE_FACTORY_ID: 3

  def initialize: () -> void

  def set: (untyped id, untyped numrounds, untyped rules) -> untyped

  def register: (untyped id, untyped doublebattle, untyped numPokemon, untyped battletype, ?::Integer mode) -> untyped

  def rules: () -> untyped

  def modeToRules: (untyped doublebattle, untyped numPokemon, untyped battletype, untyped mode) -> untyped

  def start: (*untyped args) -> untyped

  def pbStart: (untyped challenge) -> nil

  def pbEnd: () -> untyped

  def pbBattle: () -> untyped

  def pbInChallenge?: () -> untyped

  def pbInProgress?: () -> untyped

  def pbResting?: () -> untyped

  def extra: () -> untyped

  def decision: () -> untyped

  def wins: () -> untyped

  def swaps: () -> untyped

  def battleNumber: () -> untyped

  def nextTrainer: () -> untyped

  def pbGoOn: () -> untyped

  def pbAddWin: () -> untyped

  def pbCancel: () -> untyped

  def pbRest: () -> untyped

  def pbMatchOver?: () -> untyped

  def pbGoToStart: () -> untyped

  def setDecision: (untyped value) -> untyped

  def setParty: (untyped value) -> untyped

  def data: () -> (nil | untyped)

  def getCurrentWins: (untyped challenge) -> untyped

  def getPreviousWins: (untyped challenge) -> untyped

  def getMaxWins: (untyped challenge) -> untyped

  def getCurrentSwaps: (untyped challenge) -> untyped

  def getPreviousSwaps: (untyped challenge) -> untyped

  def getMaxSwaps: (untyped challenge) -> untyped

  private

  def ensureType: (untyped id) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class BattleChallengeData
  attr_reader battleNumber: untyped

  attr_reader numRounds: untyped

  attr_reader party: untyped

  attr_reader inProgress: untyped

  attr_reader resting: untyped

  attr_reader wins: untyped

  attr_reader swaps: untyped

  attr_accessor decision: untyped

  attr_reader extraData: untyped

  def initialize: () -> void

  def setExtraData: (untyped value) -> untyped

  def setParty: (untyped value) -> untyped

  def pbStart: (untyped t, untyped numRounds) -> untyped

  def pbGoToStart: () -> (untyped | nil)

  def pbAddWin: () -> (nil | untyped)

  def pbAddSwap: () -> (untyped | nil)

  def pbMatchOver?: () -> (true | untyped)

  def pbRest: () -> (nil | untyped)

  def pbGoOn: () -> (nil | untyped)

  def pbCancel: () -> untyped

  def pbEnd: () -> (nil | untyped)

  def nextTrainer: () -> untyped

  private

  def reset: () -> untyped

  def pbSaveInProgress: () -> untyped
end

# ==============================================================================
#
# ==============================================================================
class BattleChallengeType
  attr_accessor currentWins: untyped

  attr_accessor previousWins: untyped

  attr_accessor maxWins: untyped

  attr_accessor currentSwaps: untyped

  attr_accessor previousSwaps: untyped

  attr_accessor maxSwaps: untyped

  attr_reader doublebattle: untyped

  attr_reader numPokemon: untyped

  attr_reader battletype: untyped

  attr_reader mode: untyped

  def initialize: () -> void

  def saveWins: (untyped challenge) -> untyped
end

# ==============================================================================
# Battle Factory data
# ==============================================================================
class BattleFactoryData
  def initialize: (untyped bcdata) -> void

  def pbPrepareRentals: () -> untyped

  def pbChooseRentals: () -> untyped

  def pbPrepareSwaps: () -> untyped

  def pbChooseSwaps: () -> untyped

  def pbBattle: (untyped challenge) -> untyped
end


