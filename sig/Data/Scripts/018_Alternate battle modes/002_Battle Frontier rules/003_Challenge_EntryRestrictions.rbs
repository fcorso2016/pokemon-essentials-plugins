# ==============================================================================
#
# ==============================================================================
class StandardRestriction
  def isValid?: (untyped pkmn) -> bool
end

# ==============================================================================
#
# ==============================================================================
class HeightRestriction
  def initialize: (untyped maxHeightInMeters) -> void

  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class WeightRestriction
  def initialize: (untyped maxWeightInKg) -> void

  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
# Unused
# ==============================================================================
class NegativeExtendedGameClause
  def isValid?: (untyped pkmn) -> (false | untyped)
end

class BabyRestriction
  def isValid?: (untyped pkmn) -> untyped
end

class UnevolvedFormRestriction
  def isValid?: (untyped pkmn) -> (false | untyped)
end

# ==============================================================================
#
# ==============================================================================
module NicknameChecker
  def getName: (untyped species) -> untyped

  def check: (untyped name, untyped species) -> (true | false)
end

# ==============================================================================
# No two Pokemon can have the same nickname.
# No nickname can be the same as the (real) name of another Pokemon character.
# ==============================================================================
class NicknameClause
  def isValid?: (untyped team) -> bool

  def errorMessage: () -> untyped
end

# ==============================================================================
#
# ==============================================================================
class NonEggRestriction
  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class AblePokemonRestriction
  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class SpeciesRestriction
  def initialize: (*untyped specieslist) -> void

  def isSpecies?: (untyped species, untyped specieslist) -> untyped

  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class BannedSpeciesRestriction
  def initialize: (*untyped specieslist) -> void

  def isSpecies?: (untyped species, untyped specieslist) -> untyped

  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class RestrictedSpeciesRestriction
  def initialize: (untyped maxValue, *untyped specieslist) -> void

  def isSpecies?: (untyped species, untyped specieslist) -> untyped

  def isValid?: (untyped team) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class RestrictedSpeciesTeamRestriction < RestrictedSpeciesRestriction
  def initialize: (*untyped specieslist) -> void
end

# ==============================================================================
#
# ==============================================================================
class RestrictedSpeciesSubsetRestriction < RestrictedSpeciesRestriction
  def initialize: (*untyped specieslist) -> void
end

# ==============================================================================
#
# ==============================================================================
class SameSpeciesClause
  def isValid?: (untyped team) -> untyped

  def errorMessage: () -> untyped
end

# ==============================================================================
#
# ==============================================================================
class SpeciesClause
  def isValid?: (untyped team) -> bool

  def errorMessage: () -> untyped
end

# ==============================================================================
#
# ==============================================================================
class MinimumLevelRestriction
  attr_reader level: untyped

  def initialize: (untyped minLevel) -> void

  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class MaximumLevelRestriction
  attr_reader level: untyped

  def initialize: (untyped maxLevel) -> void

  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class TotalLevelRestriction
  attr_reader level: untyped

  def initialize: (untyped level) -> void

  def isValid?: (untyped team) -> untyped

  def errorMessage: () -> untyped
end

# ==============================================================================
#
# ==============================================================================
class BannedItemRestriction
  def initialize: (*untyped itemlist) -> void

  def isSpecies?: (untyped item, untyped itemlist) -> untyped

  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class ItemsDisallowedClause
  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class SoulDewClause
  def isValid?: (untyped pkmn) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class ItemClause
  def isValid?: (untyped team) -> bool

  def errorMessage: () -> untyped
end

# ==============================================================================
#
# ==============================================================================
class LittleCupRestriction
  def isValid?: (untyped pkmn) -> bool
end


