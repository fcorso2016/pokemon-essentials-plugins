# ==============================================================================
#
# ==============================================================================
class LevelAdjustment
  BOTH_TEAMS: 0

  ENEMY_TEAM: 1

  MY_TEAM: 2

  BOTH_TEAMS_DIFFERENT: 3

  def initialize: (untyped adjustment) -> void

  def type: () -> untyped

  def self.getNullAdjustment: (untyped thisTeam, untyped _otherTeam) -> untyped

  def getAdjustment: (untyped thisTeam, untyped otherTeam) -> untyped

  def getOldExp: (untyped team1, untyped _team2) -> untyped

  def unadjustLevels: (untyped team1, untyped team2, untyped adjustments) -> untyped

  def adjustLevels: (untyped team1, untyped team2) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class FixedLevelAdjustment < LevelAdjustment
  def initialize: (untyped level) -> void

  def getAdjustment: (untyped thisTeam, untyped _otherTeam) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class TotalLevelAdjustment < LevelAdjustment
  def initialize: (untyped minLevel, untyped maxLevel, untyped totalLevel) -> void

  def getAdjustment: (untyped thisTeam, untyped _otherTeam) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class CombinedLevelAdjustment < LevelAdjustment
  def initialize: (untyped my, untyped their) -> void

  def getMyAdjustment: (untyped myTeam, untyped theirTeam) -> untyped

  def getTheirAdjustment: (untyped theirTeam, untyped myTeam) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class SinglePlayerCappedLevelAdjustment < CombinedLevelAdjustment
  def initialize: (untyped level) -> void
end

# ==============================================================================
#
# ==============================================================================
class CappedLevelAdjustment < LevelAdjustment
  def initialize: (untyped level) -> void

  def getAdjustment: (untyped thisTeam, untyped _otherTeam) -> untyped
end

# ==============================================================================
# Unused
# ==============================================================================
class LevelBalanceAdjustment < LevelAdjustment
  def initialize: (untyped minLevel) -> void

  def getAdjustment: (untyped thisTeam, untyped _otherTeam) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class EnemyLevelAdjustment < LevelAdjustment
  def initialize: (untyped level) -> void

  def getAdjustment: (untyped thisTeam, untyped _otherTeam) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class OpenLevelAdjustment < LevelAdjustment
  def initialize: (?::Integer minLevel) -> void

  def getAdjustment: (untyped thisTeam, untyped otherTeam) -> untyped
end


