# TypeProf 0.21.3

# Classes
module SaveData
  type conversion_table = {essentials: Hash[Integer, Conversion], game: Hash[Integer, Conversion]}
  @conversions: conversion_table

  def self.register_conversion: (Symbol id) -> void
  def self.get_conversions: (Hash[Object, Object] save_data) -> Array[Conversion]
  def self.run_conversions: (Hash[Object, Object] save_data) -> bool
  def self.run_single_conversions: (Object object, Symbol key, Hash[Object, Object] save_data) -> Array[Conversion]

  class Conversion
    @value_procs: Hash[Symbol, Proc?]
    @all_proc: Array[Proc]?

    attr_reader id: Symbol
    attr_reader title: String
    attr_reader trigger_type: Symbol?
    attr_reader version: String?
    def initialize: (Symbol id) -> void
    def should_run?: (String version) -> bool
    def run: (Hash[Object, Object] save_data) -> void
    def run_single: (Object object, Symbol key) -> void

    private
    def display_title: (String new_title) -> void
    def essentials_version: (number version) -> void |
                            (String version) -> void
    def game_version: (number version) -> void |
                      (String version) -> void
    def to_value: (Symbol value_id) -> void
    def to_all: -> void
  end
end



