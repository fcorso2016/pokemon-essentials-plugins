# TypeProf 0.21.3

# Classes
module Kernel
  def echo: (Object string) -> void
  def echoln: (Object string) -> void
end

module Console
  @markup_all_options: Hash[String, Symbol]

  def self.setup_console: -> void
  def self.readInput: -> String
  def self.readInput2: -> String
  def self.get_input: -> void
  def self?.echo_h1: (String msg) -> void
  def self?.echo_h2: (String msg, **Symbol) -> void
  def self?.echo_h3: (String msg) -> void
  def self?.echo_li: (Array[String] msg, ?Integer pad, ?Symbol color) -> void
  def self?.echoln_li: (Array[String] msg, ?Integer pad, ?Symbol color) -> void
  def self?.echoln_li_done: (Array[String] msg) -> void
  def self?.echo_p: (String msg) -> void
  def self?.echo_warn: (String msg) -> void
  def self?.echo_error: (String msg) -> void
  def self?.echo_status: (bool status) -> void
  def self?.echo_done: (bool status) -> void
  def self?.string_colors: -> Hash[Symbol, String]
  def self?.background_colors: -> Hash[Symbol, String]
  def self?.font_options: -> Hash[Symbol, String]
  def self?.markup_colors: -> (Hash[String, Symbol])
  def self?.markup_options: -> (Hash[String, Symbol])
  def self?.markup_style: (String string, ?text: Symbol, ?bg: Symbol, **Symbol) -> String
  def self?.markup_all_options: -> (Hash[String, Symbol])
  def self?.markup_component: (String string, String component, String key, Hash[String, Hash[Symbol, String]] options) -> [String, Hash[String, Hash[Symbol, String]]]
  def self?.markup_breakdown: (String string, ?Hash[String, Hash[Symbol, String]] options) -> [String, Hash[String, Hash[Symbol, String]]]
  def self?.markup: (String string) -> String
end



