# TypeProf 0.21.3

# Classes
module RPG
  class Sprite < ::Sprite
    @_animation_duration: Numeric
    @_animation_frame: Integer
    @animations: Array[SpriteAnimation]
    @loopAnimations: Array[SpriteAnimation]

    def initialize: (?Viewport? viewport) -> void
    def dispose: -> void
    def dispose_animation: -> void
    def dispose_loop_animation: -> void
    def x=: (Integer x) -> Integer
    def y=: (Integer y) -> Integer
    def pushAnimation: (Array[SpriteAnimation] array, SpriteAnimation anim) -> void
    def animation: (Animation animation, bool hit, ?Integer height) -> void
    def loop_animation: (Animation animation) -> void
    def effect?: -> bool
    def update_animation: -> void
    def update_loop_animation: -> void
    def update: -> void
  end
end

class FloatSprite
  @float_x: Float
  @float_y: Float

  def x: -> Float
  def y: -> Float
  def x=: (Float value) -> Float
  def y=: (Float value) -> Float
end



