module Compiler
  def self?.get_all_PBS_file_paths: (Class game_data) -> Array[[String, untyped]]

  def self?.add_PBS_header_to_file: (File file) -> void

  def self?.write_PBS_file_generic: (Class game_data) -> void

  # ============================================================================
  # Save Town Map data to PBS file
  # ============================================================================
  def self?.write_town_map: () -> void

  # ============================================================================
  # Save map connections to PBS file
  # ============================================================================
  def self?.normalize_connection: ([Integer, Integer, Integer, Integer, Integer] conn) -> [Integer, Integer, Integer, Integer, Integer]

  def self?.get_connection_text: (Integer map1, Integer x1, Integer y1, Integer map2, Integer x2, Integer y2) -> String

  def self?.write_connections: (?String path) -> void

  # ============================================================================
  # Save type data to PBS file
  # ============================================================================
  def self?.write_types: () -> void

  # ============================================================================
  # Save ability data to PBS file
  # ============================================================================
  def self?.write_abilities: () -> void

  # ============================================================================
  # Save move data to PBS file
  # ============================================================================
  def self?.write_moves: () -> void

  # ============================================================================
  # Save item data to PBS file
  # ============================================================================
  def self?.write_items: () -> void

  # ============================================================================
  # Save berry plant data to PBS file
  # ============================================================================
  def self?.write_berry_plants: () -> void

  # ============================================================================
  # Save PokÃƒÂ©mon data to PBS file
  # NOTE: Doesn't use write_PBS_file_generic because it needs to ignore defined
  #       species with a form that isn't 0.
  # ============================================================================
  def self?.write_pokemon: () -> void

  # ============================================================================
  # Save PokÃƒÂ©mon forms data to PBS file
  # NOTE: Doesn't use write_PBS_file_generic because it needs to ignore defined
  #       species with a form of 0, and needs its own schema.
  # ============================================================================
  def self?.write_pokemon_forms: () -> void

  # ============================================================================
  # Write species metrics
  # NOTE: Doesn't use write_PBS_file_generic because it needs to ignore defined
  #       metrics for forms of species where the metrics are the same as for the
  #       base species.
  # ============================================================================
  def self?.write_pokemon_metrics: () -> void

  # ============================================================================
  # Save Shadow PokÃƒÂ©mon data to PBS file
  # ============================================================================
  def self?.write_shadow_pokemon: () -> void

  # ============================================================================
  # Save Regional Dexes to PBS file
  # ============================================================================
  def self?.write_regional_dexes: (?::String path) -> void

  # ============================================================================
  # Save ability data to PBS file
  # ============================================================================
  def self?.write_ribbons: () -> void

  # ============================================================================
  # Save wild encounter data to PBS file
  # ============================================================================
  def self?.write_encounters: () -> void

  # ============================================================================
  # Save trainer type data to PBS file
  # ============================================================================
  def self?.write_trainer_types: () -> void

  # ============================================================================
  # Save individual trainer data to PBS file
  # ============================================================================
  def self?.write_trainers: () -> void

  # ============================================================================
  # Save trainer list data to PBS file
  # ============================================================================
  def self?.write_trainer_lists: (?::String path) -> void

  # ============================================================================
  # Save Battle Tower trainer data to PBS file
  # ============================================================================
  def self?.write_battle_tower_trainers: (untyped bttrainers, untyped filename) -> void

  # ============================================================================
  # Save Battle Tower PokÃƒÂ©mon data to PBS file
  # ============================================================================
  def self?.write_battle_tower_pokemon: (untyped btpokemon, untyped filename) -> void

  # ============================================================================
  # Save metadata data to PBS file
  # NOTE: Doesn't use write_PBS_file_generic because it contains data for two
  #       different GameData classes.
  # ============================================================================
  def self?.write_metadata: () -> void

  # ============================================================================
  # Save map metadata data to PBS file
  # NOTE: Doesn't use write_PBS_file_generic because it writes the RMXP map name
  #       next to the section header for each map.
  # ============================================================================
  def self?.write_map_metadata: () -> void

  # ============================================================================
  # Save dungeon tileset contents data to PBS file
  # NOTE: Doesn't use write_PBS_file_generic because it writes the tileset name
  #       next to the section header for each tileset.
  # ============================================================================
  def self?.write_dungeon_tilesets: () -> void

  # ============================================================================
  # Save dungeon parameters to PBS file
  # ============================================================================
  def self?.write_dungeon_parameters: () -> void

  # ============================================================================
  # Save phone messages to PBS file
  # ============================================================================
  def self?.write_phone: () -> void

  # ============================================================================
  # Save all data to PBS files
  # ============================================================================
  def self?.write_all: () -> void
end



