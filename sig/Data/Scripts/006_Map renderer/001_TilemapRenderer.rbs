# TypeProf 0.21.3

# Classes
class TilemapRenderer
  include _CheckedDisposable
  include _Updatable
  include _Visualizable
  include _Refreshable

  DISPLAY_TILE_WIDTH: Integer
  DISPLAY_TILE_HEIGHT: Integer
  SOURCE_TILE_WIDTH: Integer
  SOURCE_TILE_HEIGHT: Integer
  ZOOM_X: Integer
  ZOOM_Y: Integer
  TILESET_TILES_PER_ROW: Integer
  AUTOTILES_COUNT: Integer
  TILES_PER_AUTOTILE: Integer
  TILESET_START_ID: Integer
  AUTOTILE_FRAME_DURATION: Integer
  EXTRA_AUTOTILES: Hash[Integer, Array[Array[String]]]
  @tiles_horizontal_count: Integer
  @tiles_vertical_count: Integer
  @old_tone: Tone
  @old_color: Color
  @self_viewport: Viewport?
  @old_viewport_ox: Integer
  @old_viewport_oy: Integer
  @tiles: Array[Array[TileSprite]]
  @current_map_id: Integer
  @tile_offset_x: Integer
  @tile_offset_y: Integer
  @pixel_offset_x: Integer
  @pixel_offset_y: Integer
  @need_refresh: bool
  @disposed: bool
  @screen_moved: bool
  @screen_moved_vertically: bool
  @bridge: bool

  attr_reader tilesets: TilesetBitmaps
  attr_reader autotiles: AutotileBitmaps
  attr_accessor tone: Tone
  attr_accessor color: Color
  attr_reader viewport: Viewport?
  attr_accessor ox: Integer
  attr_accessor oy: Integer
  @visible: bool
  def initialize: (Viewport viewport) -> void
  def add_tileset: (String filename) -> void
  def remove_tileset: (String filename) -> void
  def add_autotile: (String filename) -> void
  def remove_autotile: (String filename) -> void
  def add_extra_autotiles: (String tileset_id) -> void
  def remove_extra_autotiles: (String tileset_id) -> void
  def refresh_tile_bitmap: (Rect tile, Game_Map map, Integer tile_id) -> void
  def refresh_tile_src_rect: (Rect tile, Integer tile_id) -> void
  def refresh_tile_frame: (Rect tile, Integer tile_id) -> void
  def refresh_tile_coordinates: (Rect tile, Integer x, Integer y) -> void
  def refresh_tile_z: (Rect tile, Game_Map map, Integer y, Integer layer, Integer tile_id) -> void
  def refresh_tile: (Rect tile, Integer x, Integer y, Game_Map map, Integer layer, Integer tile_id) -> void
  def check_if_screen_moved: -> bool

  class TilesetBitmaps
    include _Updatable

    @bitmap_wraps: Hash[String, bool]
    @load_counts: Hash[String, Integer]
    @bridge: Integer

    attr_accessor changed: bool
    attr_accessor bitmaps: Hash[String, Bitmap]
    def initialize: -> void
    def []: (String filename) -> Bitmap
    def []=: (String filename, Bitmap bitmap) -> void
    def add: (String filename) -> void
    def remove: (String filename) -> void
    def set_src_rect: (Rect tile, Integer tile_id) -> void
  end

  class AutotileBitmaps < TilesetBitmaps
    @frame_counts: Hash[String, Integer?]
    @frame_durations: Hash[String, Float]
    @timer_start: Math::double

    attr_reader current_frames: Hash[String, Integer]
    def initialize: -> void
    def frame_count: (String filename, ?bool force_recalc) -> Integer?
    def animated?: (String filename) -> bool
    def current_frame: (String filename) -> Integer
    def set_current_frame: (String filename) -> Integer
  end

  class TileSprite
    attr_accessor filename: String
    attr_accessor tile_id: Integer
    attr_accessor is_autotile: bool
    attr_accessor animated: bool
    attr_accessor priority: Integer
    attr_accessor shows_reflection: bool
    attr_accessor bridge: bool
    attr_accessor need_refresh: bool
    def set_bitmap: (String filename, Integer tile_id, bool autotile, bool animated, Integer priority, Bitmap bitmap) -> true
  end
end



