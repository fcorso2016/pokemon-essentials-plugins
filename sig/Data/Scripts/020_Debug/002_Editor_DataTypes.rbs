# ==============================================================================
# Data type properties
# ==============================================================================
module UndefinedProperty

  def self.set: [T] (String setting_name, T old_setting) -> T

  def self.format: [T] (T value) -> String
end

# ==============================================================================
#
# ==============================================================================
module ReadOnlyProperty
  def self.set: [T] (String _settingname, T oldsetting) -> T

  def self.format: (Object value) -> String
end

interface _EditorProperty[T]

  def set: (String setting_name, T old_setting) -> T

  def format: (T value) -> String

end

interface _DefaultEditorProperty[T]
  include _EditorProperty[T]

  def defaultValue: () -> T?

end

# ==============================================================================
#
# ==============================================================================
class UIntProperty
  include _DefaultEditorProperty[Integer]
  
  @maxdigits: Integer

  def initialize: (Integer maxdigits) -> void
end

# ==============================================================================
#
# ==============================================================================
class LimitProperty
  include _DefaultEditorProperty[Integer]
  
  @maxvalue: Integer

  def initialize: (Integer maxvalue) -> void
end

# ==============================================================================
#
# ==============================================================================
class LimitProperty2
  include _DefaultEditorProperty[Integer]
  
  @maxvalue: Integer

  def initialize: (Integer maxvalue) -> void
end

# ==============================================================================
#
# ==============================================================================
class NonzeroLimitProperty
  include _DefaultEditorProperty[Integer]

  @maxvalue: Integer

  def initialize: (Integer maxvalue) -> void
end

# ==============================================================================
#
# ==============================================================================
module BooleanProperty
  def self.set: (String settingname, bool _oldsetting) -> bool

  def self.format: (bool value) -> String
end

# ==============================================================================
#
# ==============================================================================
module BooleanProperty2
  def self.set: (String _settingname, bool _oldsetting) -> untyped

  def self.defaultValue: () -> bool?

  def self.format: (bool value) -> String
end

# ==============================================================================
#
# ==============================================================================
module StringProperty
  def self.set: (String settingname, String oldsetting) -> String

  def self.format: (String value) -> String
end

# ==============================================================================
#
# ==============================================================================
class LimitStringProperty
  include _EditorProperty[String]
  
  @limit: Integer

  def initialize: (Integer limit) -> void
end

# ==============================================================================
#
# ==============================================================================
class EnumProperty
  include _DefaultEditorProperty[Integer]

  @values: Array[String]

  def initialize: (Array[String] values) -> void
end

# ==============================================================================
# Unused
# ==============================================================================
class EnumProperty2
  include _DefaultEditorProperty[Integer]

  @module: Module

  def initialize: (Module value) -> void
end

# ==============================================================================
#
# ==============================================================================
class StringListProperty
  def self.set: (String _setting_name, Array[String] old_setting) -> Array[String]

  def self.defaultValue: () -> Array[String]

  def self.format: (Array[String] value) -> String
end

# ==============================================================================
#
# ==============================================================================
class GameDataProperty
  include _DefaultEditorProperty[Integer]
  
  @module: GameData::ClassMethodsSymbols[untyped, untyped]

  def initialize: (_ToSym value) -> void
end

# ==============================================================================
#
# ==============================================================================
module BGMProperty
  def self.set: (String settingname, String oldsetting) -> String

  def self.format: (String value) -> String
end

# ==============================================================================
#
# ==============================================================================
module MEProperty
  def self.set: (String settingname, String oldsetting) -> String

  def self.format: (String value) -> String
end

# ==============================================================================
#
# ==============================================================================
module WindowskinProperty
  def self.set: (String settingname, String oldsetting) -> String

  def self.format: (String? value) -> String
end

# ==============================================================================
#
# ==============================================================================
module TrainerTypeProperty
  def self.set: (String settingname, Symbol oldsetting) -> Symbol

  def self.format: (Symbol? value) -> String
end

# ==============================================================================
#
# ==============================================================================
module SpeciesProperty
  def self.set: (String _settingname, Symbol oldsetting) -> untyped

  def self.defaultValue: () -> Symbol?

  def self.format: (Symbol? value) -> String
end

# ==============================================================================
#
# ==============================================================================
class SpeciesFormProperty
  include _DefaultEditorProperty[Symbol]

  @default_value: Symbol

  def initialize: (Symbol default_value) -> void
end

# ==============================================================================
#
# ==============================================================================
module TypeProperty
  def self.set: (String _settingname, Symbol oldsetting) -> Symbol

  def self.defaultValue: () -> Symbol?

  def self.format: (Symbol? value) -> String
end

# ==============================================================================
#
# ==============================================================================
module TypesProperty
  def self.set: (String _settingname, Array[Symbol] oldsetting) -> Array[Symbol]

  def self.defaultValue: () -> Array[Symbol]

  def self.format: (Array[Symbol] value) -> String
end

# ==============================================================================
#
# ==============================================================================
module MoveProperty
  def self.set: (String _settingname, Symbol? oldsetting) -> Symbol?

  def self.defaultValue: () -> Symbol?

  def self.format: (Symbol? value) -> String
end

# ==============================================================================
#
# ==============================================================================
class MovePropertyForSpecies
  include _DefaultEditorProperty[Symbol]

  @pokemondata: GameData::Species::schema

  def initialize: (GameData::Species::schema pokemondata) -> void
end

# ==============================================================================
#
# ==============================================================================
module GenderProperty
  def self.set: (String _settingname, Integer _oldsetting) -> Integer

  def self.defaultValue: () -> Integer?

  def self.format: (Integer? value) -> String
end

# ==============================================================================
#
# ==============================================================================
module ItemProperty
  def self.set: (String _settingname, Symbol oldsetting) -> Symbol

  def self.defaultValue: () -> Symbol?

  def self.format: (Symbol? value) -> String
end

# ==============================================================================
#
# ==============================================================================
class IVsProperty
  include _DefaultEditorProperty[Hash[Symbol, Integer]]

  @limit: Integer

  def initialize: (Integer limit) -> void
end

# ==============================================================================
#
# ==============================================================================
class EVsProperty
  include _DefaultEditorProperty[Hash[Symbol, Integer]]

  @limit: Integer

  def initialize: (Integer limit) -> void
end

# ==============================================================================
#
# ==============================================================================
class BallProperty
  include _DefaultEditorProperty[Symbol]

  @pokemondata: GameData::Species::schema

  def initialize: (GameData::Species::schema pokemondata) -> void
end

# ==============================================================================
#
# ==============================================================================
module CharacterProperty
  def self.set: (String settingname, String oldsetting) -> String

  def self.format: (String value) -> String
end

# ==============================================================================
#
# ==============================================================================
module MapSizeProperty
  def self.set: (String settingname, [Integer, String] oldsetting) -> [Integer, String]

  def self.format: ([Integer, String] value) -> String
end

# ==============================================================================
#
# ==============================================================================
module MapCoordsProperty
  def self.set: (String settingname, [Integer, Integer, Integer] oldsetting) -> [Integer, Integer, Integer]

  def self.format: ([Integer, Integer, Integer] value) -> String
end

# ==============================================================================
#
# ==============================================================================
module MapCoordsFacingProperty
  def self.set: (String settingname, [Integer, Integer, Integer, Integer] oldsetting) -> [Integer, Integer, Integer, Integer]

  def self.format: ([Integer, Integer, Integer, Integer]  value) -> String
end

# ==============================================================================
#
# ==============================================================================
module RegionMapCoordsProperty
  def self.set: (String _settingname, [Integer, Integer, Integer]  oldsetting) -> [Integer, Integer, Integer]

  def self.format: ([Integer, Integer, Integer] value) -> String

  def self.getMapNameList: () -> Array[[Integer, String]]
end

# ==============================================================================
#
# ==============================================================================
module WeatherEffectProperty
  def self.set: (String _settingname, [Symbol, Integer] oldsetting) -> [Symbol, Integer]

  def self.format: ([Symbol, Integer] value) -> String
end

# ==============================================================================
#
# ==============================================================================
module MapProperty
  def self.set: (String settingname, Integer oldsetting) -> Integer

  def self.defaultValue: () -> Integer?

  def self.format: (Integer value) -> String
end

# ==============================================================================
#
# ==============================================================================
module ItemNameProperty
  def self.set: (String settingname, String oldsetting) -> String

  def self.defaultValue: () -> String

  def self.format: (String value) -> String
end

# ==============================================================================
#
# ==============================================================================
module PocketProperty
  def self.set: (String _settingname, Integer oldsetting) -> Integer

  def self.defaultValue: () -> Integer

  def self.format: (Integer value) -> String
end

# ==============================================================================
#
# ==============================================================================
module BaseStatsProperty
  def self.set: (String settingname, Array[Integer] oldsetting) -> Array[Integer]

  def self.defaultValue: () -> Array[Integer]

  def self.format: (Array[Integer] value) -> String
end

# ==============================================================================
#
# ==============================================================================
module EffortValuesProperty
  def self.set: (String settingname, Array[Integer] oldsetting) -> Array[Integer]

  def self.defaultValue: () -> Array[Integer]

  def self.format: (Array[Integer] value) -> String
end

# ==============================================================================
#
# ==============================================================================
module AbilityProperty
  def self.set: (String _settingname, Symbol? oldsetting) -> Symbol?

  def self.defaultValue: () -> Symbol?

  def self.format: (Symbol? value) -> String
end

# ==============================================================================
#
# ==============================================================================
class GameDataPoolProperty
  include _DefaultEditorProperty[Symbol]

  @allow_multiple: bool
  @auto_sort: bool
  @game_data: _ToSym

  @game_data_module: GameData::ClassMethodsSymbols[untyped, untyped]

  def initialize: (_ToSym game_data, ?bool allow_multiple, ?bool auto_sort) -> void
end

# ==============================================================================
#
# ==============================================================================
class EggMovesProperty < GameDataPoolProperty
  def initialize: () -> void
end

# ==============================================================================
#
# ==============================================================================
class EggGroupsProperty < GameDataPoolProperty
  def initialize: () -> void
end

# ==============================================================================
#
# ==============================================================================
class AbilitiesProperty < GameDataPoolProperty
  def initialize: () -> void
end

# ==============================================================================
#
# ==============================================================================
module LevelUpMovesProperty
  def self.set: (String _settingname, Array[[Integer, Symbol]] oldsetting) -> Array[[Integer, Symbol]]

  def self.defaultValue: () -> Array[[Integer, Symbol]]

  def self.format: (Array[[Integer, Symbol]] value) -> String
end

# ==============================================================================
#
# ==============================================================================
class EvolutionsProperty
  include _DefaultEditorProperty[[Symbol, Symbol, untyped, Integer]]

  def initialize: () -> void

  def edit_parameter: (Symbol evo_method, ?untyped? value) -> void
end

# ==============================================================================
#
# ==============================================================================
module EncounterSlotProperty
  def self.set: (String setting_name, [Integer, Symbol, Integer, Integer] data) -> [Integer, Symbol, Integer, Integer]

  def self.defaultValue: () -> [Integer, Symbol, Integer, Integer]?

  def self.format: ([Integer, Symbol, Integer, Integer]? value) -> String
end

class Object
  def chooseMapPoint: (Integer map, ?bool rgnmap) -> [Integer, Integer]?

  # ==============================================================================
  # Core property editor script
  # ==============================================================================
  def pbPropertyList: (String title, Array[untyped] data, Array[[String, _EditorProperty[untyped], String]] properties, ?bool saveprompt) -> boolish
end

