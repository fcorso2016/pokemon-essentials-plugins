module BattleAnimationEditor
  # ============================================================================
  #
  # ============================================================================
  module ShadowText
    def shadowtext: (Bitmap bitmap, Integer x, Integer y, Integer w, Integer h, String t, ?bool disabled, ?Integer align) -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class UIControl
    include _Updatable
    include _Refreshable

    include ShadowText

    @invalid: bool

    attr_accessor bitmap: Bitmap

    attr_accessor label: String

    attr_accessor x: Integer

    attr_accessor y: Integer

    attr_accessor width: Integer

    attr_accessor height: Integer

    attr_accessor changed: bool

    attr_accessor parent: SpriteWindow_Base

    attr_accessor disabled: bool

    def text: () -> String

    def text=: (String value) -> void

    def initialize: (String label) -> void

    def toAbsoluteRect: (Rect rc) -> Rect

    def parentX: () -> Integer

    def parentY: () -> Integer

    def invalid?: () -> bool

    # Marks that the control must be redrawn to reflect current logic.
    def invalidate: () -> void

    # Makes the control no longer invalid.
    def validate: () -> void

    # Redraws the control only if it is invalid.
    def repaint: () -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class Label < UIControl
  end

  # ============================================================================
  #
  # ============================================================================
  class Button < UIControl
    @captured: bool

    attr_accessor label: String

    def initialize: (String label) -> void

    def refresh: () -> Rect
  end

  # ============================================================================
  #
  # ============================================================================
  class Checkbox < Button
    attr_reader checked: bool

    def curvalue: () -> bool

    def curvalue=: (bool value) -> void

    def checked=: (bool value) -> void

    def initialize: (String label) -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class TextField < UIControl
    @cursor: Integer
    @cursor_shown: bool

    @cursor_timer_start: Math::double

    attr_accessor label: String

    attr_reader text: String

    def text=: (String value) -> void

    def initialize: (String label, String text) -> void

    def insert: (String ch) -> void

    def delete: () -> void

    def refresh: () -> Rect
  end

  # ============================================================================
  #
  # ============================================================================
  class Slider < UIControl
    @leftarrow: Rect

    @rightarrow: Rect

    attr_reader minvalue: Integer

    attr_reader maxvalue: Integer

    attr_reader curvalue: Integer

    attr_accessor label: String

    def curvalue=: (Integer value) -> void

    def minvalue=: (Integer value) -> void

    def maxvalue=: (Integer value) -> void

    def initialize: (String label, Integer minvalue, Integer maxvalue, Integer curval) -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class OptionalSlider < Slider
    @checkbox: Checkbox
    @slider: Slider

    def initialize: (String label, Integer minvalue, Integer maxvalue, Integer curval) -> void

    def checked: () -> bool

    def checked=: (bool value) -> void

    def validate?: () -> void

    def changed: () -> bool

    private

    def updatedefs: () -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class ArrayCountSlider < Slider

    @array: Array[untyped]

    def initialize: (Array[untyped] array, String label) -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class FrameCountSlider < Slider

    @canvas: AnimationCanvas

    def initialize: (AnimationCanvas canvas) -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class FrameCountButton < Button

    @canvas: AnimationCanvas

    def initialize: (AnimationCanvas canvas) -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class TextSlider < UIControl
    @leftarrow: Rect

    @rightarrow: Rect

    attr_reader minvalue: Integer

    attr_reader maxvalue: Integer

    attr_reader curvalue: Integer

    attr_accessor label: String

    attr_accessor options: Array[String]

    attr_accessor maxoptionwidth: Integer

    def curvalue=: (Integer value) -> void

    def minvalue=: (Integer value) -> void

    def maxvalue=: (Integer value) -> void

    def initialize: (String label, Array[String] options, Integer curval) -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class OptionalTextSlider < TextSlider
    @checkbox: Checkbox
    @slider: TextSlider

    def initialize: (String label, Array[String] options, Integer curval) -> void

    def checked: () -> bool

    def checked=: (bool value) -> void

    def validate?: () -> void

    def changed: () -> bool

    private

    def updatedefs: () -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class ControlWindow < SpriteWindow_Base
    include _Refreshable

    attr_reader controls: untyped

    def initialize: (Integer x, Integer y, Integer width, Integer height) -> void

    def repaint: () -> void

    def invalidate: () -> void

    def hittest?: (Integer i) -> bool

    def addControl: (UIControl control) -> Integer

    def addLabel: (String label) -> Integer

    def addButton: (String label) -> Integer

    def addSlider: (String label, Integer minvalue, Integer maxvalue, Integer curvalue) -> Integer

    def addOptionalSlider: (String label, Integer minvalue, Integer maxvalue, Integer curvalue) -> Integer

    def addTextSlider: (String label, Array[String] options, Integer curvalue) -> Integer

    def addOptionalTextSlider: (String label, Array[String] options, Integer curvalue) -> Integer

    def addCheckbox: (String label) -> Integer

    def addSpace: () -> Integer

    def changed?: (Integer i) -> bool

    def value: (Integer i) -> boolish
  end
end

