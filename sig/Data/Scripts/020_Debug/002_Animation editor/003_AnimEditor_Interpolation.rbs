module BattleAnimationEditor
  # ============================================================================
  # Paths and interpolation
  # ============================================================================
  class ControlPointSprite < Sprite
    attr_accessor dragging: bool

    def initialize: (bool red, ?Viewport? viewport) -> void

    def mouseover: () -> void

    def hittest?: () -> bool
  end

  # ============================================================================
  #
  # ============================================================================
  class PointSprite < Sprite
    def initialize: (Integer x, Integer y, ?Viewport? viewport) -> void
  end

  # ============================================================================
  #
  # ============================================================================
  class PointPath
    include Enumerable[[number, number]]
    include _Inspectable

    @distances: Array[number]
    @points: Array[[number, number]]

    @totaldist: number

    def initialize: () -> void

    def []: (Integer x) -> [number, number]

    def each: () { ([number, number]) -> void } -> void

    def size: () -> Integer

    def length: () -> Integer

    def totalDistance: () -> number

    def isEndPoint?: (number x, number y) -> bool

    def addPoint: (number x, number y) -> void

    def clear: () -> void

    def smoothPointPath: (Integer frames, ?bool roundValues) -> PointPath

    def pointOnPath: (number t) -> [Integer, Integer]?
  end

  # ============================================================================
  #
  # ============================================================================
  def self?.catmullRom: (number p1, number p2, number p3, number p4, number t) -> number

  def self?.getCatmullRomPoint: (PointPath src, number t) -> [number, number]

  def self?.getCurvePoint: (PointPath src, number t) -> [number, number]

  def self?.curveToPointPath: (PointPath curve, Integer numpoints) -> void

  def self?.pbDefinePath: (AnimationCanvas canvas) -> void
end

