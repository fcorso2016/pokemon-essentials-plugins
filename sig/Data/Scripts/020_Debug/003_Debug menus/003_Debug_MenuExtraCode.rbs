# ==============================================================================
# Debug Variables screen
# ==============================================================================
class SpriteWindow_DebugVariables < Window_DrawableCommand
  attr_reader mode: Integer

  def initialize: (Viewport viewport) -> void

  def itemCount: () -> Integer

  def mode=: (Integer mode) -> void

  def shadowtext: (Integer x, Integer y, Integer w, Integer h, String t, ?Integer align, ?Integer colors) -> void
end

# ==============================================================================
# Debug roaming Pokémon screen
# ==============================================================================
class SpriteWindow_DebugRoamers < Window_DrawableCommand
  def initialize: (Viewport viewport) -> void

  def roamerCount: () -> Integer

  def itemCount: () -> Integer

  def shadowtext: (String t, Integer x, Integer y, Integer w, Integer h, ?Integer align, ?Integer colors) -> void
end

# ==============================================================================
# Pseudo-party screen for editing Pokémon being set up for a wild battle
# ==============================================================================
class PokemonDebugPartyScreen
  include _Updatable
  include _PokeUpdatable
  include _Screen

  @helpWindow: Window_UnformattedTextPokemon
  @messageBox: Window_AdvancedTextPokemon
  @viewport: Viewport

  def initialize: () -> void

  def pbEndScreen: () -> void

  def pbDisplay: (String text) -> void

  def pbConfirm: (String text) -> Integer

  def pbShowCommands: (String text, Array[String] commands, ?Integer index) -> Integer

  def pbChooseMove: (Pokemon pkmn, String text, ?Integer index) -> Integer

  def pbRefreshSingle: (Integer index) -> void

  alias pbUpdate update
end

class Object
  # ==============================================================================
  #
  # ==============================================================================
  def pbDefaultMap: () -> Integer

  def pbWarpToMap: () -> [Integer, Integer, Integer]?

  # ==============================================================================
  #
  # ==============================================================================
  def pbDebugSetVariable: (Integer id, number diff) -> void

  def pbDebugVariableScreen: (Integer id) -> void

  def pbDebugVariables: (Integer mode) -> void

  # ==============================================================================
  # Debug Day Care screen
  # ==============================================================================
  def pbDebugDayCare: () -> void

  # ==============================================================================
  #
  # ==============================================================================
  def pbDebugRoamers: () -> void

  # ==============================================================================
  # Battle animations import/export
  # ==============================================================================
  def pbExportAllAnimations: () -> void

  def pbImportAllAnimations: () -> void

  # ==============================================================================
  # Properly erases all non-existent tiles in maps (including event graphics)
  # ==============================================================================
  def pbDebugFixInvalidTiles: () -> void

  def pbCheckTileValidity: (Integer tile_id, Integer map, Array[RPG::Tileset] tilesets, Table passages) -> bool
end

