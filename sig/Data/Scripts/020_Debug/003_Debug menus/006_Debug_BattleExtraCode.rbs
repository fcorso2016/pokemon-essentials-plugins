# ==============================================================================
# Effect values that can be edited via the battle debug menu.
# ==============================================================================
module Battle::DebugVariables
  BATTLER_EFFECTS: ::Hash[untyped, { name: "Aqua Ring applies", default: false } | { name: "Battler that self is attracted to", default: -1 } | { name: "Baneful Bunker applies this round", default: false } | { name: "Bide number of rounds remaining", default: 0 } | { name: "Bide damage accumulated", default: 0, max: 999 } | { name: "Bide last battler to hurt self", default: -1 } | { name: "Burn Up has removed self's Fire type", default: false } | { name: "Charge number of rounds remaining", default: 0 } | { name: "Move locked into by Choice items", default: nil, type: :move } | { name: "Confusion number of rounds remaining", default: 0 } | { name: "Curse damaging applies", default: false } | { name: "Used Defense Curl", default: false } | { name: "Disable number of rounds remaining", default: 0 } | { name: "Disabled move", default: nil, type: :move } | { name: "Electrify making moves Electric", default: false } | { name: "Embargo number of rounds remaining", default: 0 } | { name: "Encore number of rounds remaining", default: 0 } | { name: "Encored move", default: nil, type: :move } | { name: "Endures all lethal damage this round", default: false } | { name: "Flash Fire powering up Fire moves", default: false } | { name: "Will flinch this round", default: false } | { name: "Focus Energy critical hit stages (0-4)", default: 0, max: 4 } | { name: "Follow Me drawing in attacks (if 1+)", default: 0 } | { name: "Rage Powder applies (use with Follow Me)", default: false } | { name: "Foresight applies (Ghost loses immunities)", default: false } | { name: "Fury Cutter power multiplier 2**x (0-4)", default: 0, max: 4 } | { name: "Gastro Acid is negating self's ability", default: false } | { name: "Grudge will apply if self faints", default: false } | { name: "Heal Block number of rounds remaining", default: 0 } | { name: "Helping Hand will power up self's move", default: false } | { name: "Hyper Beam recharge rounds remaining", default: 0 } | { name: "Imprison disables others' moves known by self", default: false } | { name: "Ingrain applies", default: false } | { name: "Battler trapping self with Jaw Lock", default: -1 } | { name: "King's Shield applies this round", default: false } | { name: "Laser Focus certain critial hit duration", default: 0 } | { name: "Battler that used Leech Seed on self", default: -1 } | { name: "Lock-On number of rounds remaining", default: 0 } | { name: "Battler that self is targeting with Lock-On", default: -1 } | { name: "Magnet Rise number of rounds remaining", default: 0 } | { name: "Battler trapping self with Mean Look, etc.", default: -1 } | { name: "Metronome item power multiplier 1 + 0.2*x (0-5)", default: 0, max: 5 } | { name: "Micle Berry boosting next move's accuracy", default: false } | { name: "Used Minimize", default: false } | { name: "Miracle Eye applies (Dark loses immunities)", default: false } | { name: "Used Mud Sport (Gen 5 and older)", default: false } | { name: "Taking Nightmare damage", default: false } | { name: "No Retreat trapping self in battle", default: false } | { name: "Obstruct applies this round", default: false } | { name: "Battler trapping self with Octolock", default: -1 } | { name: "Outrage number of rounds remaining", default: 0 } | { name: "Perish Song number of rounds remaining", default: 0 } | { name: "Battler that used Perish Song on self", default: -1 } | { name: "Item retrievable by Pickup", default: nil, type: :item } | { name: "Pickup item consumed time (higher=more recent)", default: 0 } | { name: "(Battle Palace) Behavior changed at <50% HP", default: false } | { name: "Powder will explode self's Fire move this round", default: false } | { name: "Protect applies this round", default: false } | { name: "Protect success chance 1/x", default: 1, max: 999 } | { name: "Rollout rounds remaining (lower=stronger)", default: 0 } | { name: "Roost removing Flying type this round", default: false } | { name: "Slow Start rounds remaining", default: 0 } | { name: "Smack Down is grounding self", default: false } | { name: "Spiky Shield applies this round", default: false } | { name: "Spotlight drawing in attacks (if 1+)", default: 0 } | { name: "Stockpile count (0-3)", default: 0, max: 3 } | { name: "Def stages gained by Stockpile (0-12)", default: 0, max: 12 } | { name: "Sp. Def stages gained by Stockpile (0-12)", default: 0, max: 12 } | { name: "Substitute's HP", default: 0, max: 999 } | { name: "Tar Shot weakening self to Fire", default: false } | { name: "Taunt number of rounds remaining", default: 0 } | { name: "Telekinesis number of rounds remaining", default: 0 } | { name: "Throat Chop number of rounds remaining", default: 0 } | { name: "Torment preventing repeating moves", default: false } | { name: "Trapping number of rounds remaining", default: 0 } | { name: "Move that is trapping self", default: nil, type: :move } | { name: "Battler trapping self (for Binding Band)", default: -1 } | { name: "Truant will loaf around this round", default: false } | { name: "Self lost its item (for Unburden)", default: false } | { name: "Uproar number of rounds remaining", default: 0 } | { name: "Used Water Sport (Gen 5 and older)", default: false } | { name: "Weight change +0.1*x kg", default: 0, min: -99999, max: 99999 } | { name: "Yawn rounds remaining until falling asleep", default: 0 }]

  SIDE_EFFECTS: ::Hash[untyped, { name: "Aurora Veil duration", default: 0 } | { name: "Crafty Shield applies this round", default: false } | { name: "Echoed Voice rounds used (max. 5)", default: 0, max: 5 } | { name: "Echoed Voice used this round", default: false } | { name: "Round when side's battler last fainted", default: -2 } | { name: "Light Screen duration", default: 0 } | { name: "Lucky Chant duration", default: 0 } | { name: "Mat Block applies this round", default: false } | { name: "Mist duration", default: 0 } | { name: "Quick Guard applies this round", default: false } | { name: "Rainbow duration", default: 0 } | { name: "Reflect duration", default: 0 } | { name: "Round was used this round", default: false } | { name: "Safeguard duration", default: 0 } | { name: "Sea Of Fire duration", default: 0 } | { name: "Spikes layers (0-3)", default: 0, max: 3 } | { name: "Stealth Rock exists", default: false } | { name: "Sticky Web exists", default: false } | { name: "Swamp duration", default: 0 } | { name: "Tailwind duration", default: 0 } | { name: "Toxic Spikes layers (0-2)", default: 0, max: 2 } | { name: "Wide Guard applies this round", default: false }]

  FIELD_EFFECTS: ::Hash[untyped, { name: "Amulet Coin doubling prize money", default: false } | { name: "Fairy Lock trapping duration", default: 0 } | { name: "Fusion Bolt was used", default: false } | { name: "Fusion Flare was used", default: false } | { name: "Gravity duration", default: 0 } | { name: "Happy Hour doubling prize money", default: false } | { name: "Ion Deluge making moves Electric", default: false } | { name: "Magic Room duration", default: 0 } | { name: "Mud Sport duration (Gen 6+)", default: 0 } | { name: "Pay Day additional prize money", default: 0, max: untyped } | { name: "Trick Room duration", default: 0 } | { name: "Water Sport duration (Gen 6+)", default: 0 } | { name: "Wonder Room duration", default: 0 }]

  POSITION_EFFECTS: ::Hash[untyped, { name: "Whether Healing Wish is waiting to apply", default: false } | { name: "Whether Lunar Dance is waiting to apply", default: false }]
end

# ==============================================================================
# Screen for listing the above battle variables for modifying.
# ==============================================================================
class SpriteWindow_DebugBattleFieldEffects < Window_DrawableCommand
  BASE_TEXT_COLOR: untyped

  RED_TEXT_COLOR: untyped

  GREEN_TEXT_COLOR: untyped

  TEXT_SHADOW_COLOR: untyped

  def initialize: (untyped viewport, untyped battle, untyped variables, untyped variables_data) -> void

  def itemCount: () -> untyped

  def shadowtext: (untyped x, untyped y, untyped w, untyped h, untyped t, ?::Integer align, ?::Integer colors) -> untyped

  def drawItem: (untyped index, untyped _count, untyped rect) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class Battle::DebugSetEffects
  def initialize: (untyped battle, untyped mode, ?::Integer side) -> void

  def dispose: () -> untyped

  def choose_number: (untyped default, untyped min, untyped max) -> untyped

  def choose_battler: (untyped default) -> untyped

  def update_input_for_boolean: (untyped effect, untyped variable_data) -> (true | false)

  def update_input_for_integer: (untyped effect, untyped default, untyped variable_data) -> (true | false)

  def update_input_for_battler_index: (untyped effect, untyped variable_data) -> (true | false)

  def update_input_for_move: (untyped effect, untyped variable_data) -> (true | false)

  def update_input_for_item: (untyped effect, untyped variable_data) -> (true | false)

  def update: () -> untyped
end


