# ==============================================================================
# Miniature game map drawing
# ==============================================================================
class MapSprite
  def initialize: (untyped map, ?untyped? viewport) -> void

  def dispose: () -> untyped

  def z=: (untyped value) -> untyped

  def getXY: () -> (nil | ::Array[untyped])
end

# ==============================================================================
#
# ==============================================================================
class SelectionSprite < Sprite
  def initialize: (?untyped? viewport) -> void

  def othersprite=: (untyped value) -> untyped
end

# ==============================================================================
#
# ==============================================================================
class RegionMapSprite
  def initialize: (untyped map, ?untyped? viewport) -> void

  def dispose: () -> untyped

  def z=: (untyped value) -> untyped

  def createRegionMap: (untyped map) -> untyped

  def getXY: () -> (nil | ::Array[untyped])
end

# ==============================================================================
# Visual Editor (map connections)
# ==============================================================================
class MapScreenScene
  include _Scene
  include _Updatable

  def main: -> void

  def getMapSprite: (untyped id) -> untyped

  def close: () -> untyped

  def setMapSpritePos: (untyped id, untyped x, untyped y) -> untyped

  def putNeighbors: (untyped id, untyped sprites) -> untyped

  def hasConnections?: (untyped conns, untyped id) -> (true | false)

  def connectionsSymmetric?: (untyped conn1, untyped conn2) -> bool

  def removeOldConnections: (untyped ret, untyped mapid) -> untyped

  # Returns the maps within _keys_ that are directly connected to this map, _map_.
  def getDirectConnections: (untyped keys, untyped map) -> untyped

  def generateConnectionData: () -> untyped

  def serializeConnectionData: () -> untyped

  def putSprite: (untyped id) -> untyped

  def addSprite: (untyped id) -> untyped

  def saveMapSpritePos: () -> untyped

  def mapScreen: () -> untyped

  def setTopSprite: (untyped id) -> untyped

  def helpWindow: () -> untyped

  def getMapRect: (untyped mapid) -> (nil | ::Array[untyped])

  def onDoubleClick: (untyped map_id) -> (untyped | nil)

  def onClick: (untyped mapid, untyped x, untyped y) -> untyped

  def onRightClick: (untyped mapid, untyped x, untyped y) -> nil

  def onMouseUp: (untyped mapid) -> (untyped | nil)

  def onRightMouseUp: (untyped mapid) -> nil

  def onMouseOver: (untyped mapid, untyped x, untyped y) -> nil

  def onMouseMove: (untyped mapid, untyped x, untyped y) -> untyped

  def hittest: (untyped x, untyped y) -> (untyped | -1)

  def chooseMapScreen: (untyped title, untyped currentmap) -> untyped

  def pbMapScreenLoop: () -> untyped
end

class Object
  # ==============================================================================
  #
  # ==============================================================================
  def pbConnectionsEditor: () -> untyped
end


