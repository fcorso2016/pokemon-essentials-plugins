# ==============================================================================
# Global metadata not specific to a map.  This class holds field state data that
# span multiple maps.
# ==============================================================================
class PokemonGlobalMetadata
  @flashused: bool

  # Movement
  attr_accessor bicycle: bool

  attr_accessor surfing: bool

  attr_accessor diving: bool

  attr_accessor ice_sliding: bool

  attr_accessor descending_waterfall: bool

  attr_accessor ascending_waterfall: bool

  attr_accessor fishing: bool

  # Player data
  attr_accessor startTime: Time

  attr_accessor stepcount: Integer

  attr_accessor pcItemStorage: PCItemStorage?

  attr_accessor mailbox: Array[Mail]?

  attr_accessor phoneNumbers: Array[untyped]?

  attr_accessor phoneTime: Time?

  attr_accessor phone: Phone

  attr_accessor partner: [Symbol, String, Integer, Array[Pokemon]]?

  attr_accessor creditsPlayed: bool

  # PokÃ©dex
  attr_accessor pokedexDex: Integer

  attr_accessor pokedexIndex: Array[Integer]

  attr_accessor pokedexMode: Integer

  # Day Care
  attr_accessor day_care: DayCare

  # Special battle modes
  attr_accessor safariState: SafariState?

  attr_accessor bugContestState: BugContestState?

  attr_accessor challenge: BattleChallenge?

  attr_accessor lastbattle: [Integer, Hash[String, untyped], Array[Array[Array[untyped]]], Array[Integer], Array[bool]]?

  # Events
  attr_accessor eventvars: Hash[[Integer, Integer], untyped]

  # Affecting the map
  attr_accessor bridge: Integer

  attr_accessor repel: Integer

  attr_accessor flashUsed: bool

  attr_reader encounter_version: Integer

  # Map transfers
  attr_accessor healingSpot: [Integer, Integer, Integer]?

  attr_accessor escapePoint: [Integer, Integer, Integer]

  attr_accessor pokecenterMapId: Integer

  attr_accessor pokecenterX: Integer

  attr_accessor pokecenterY: Integer

  attr_accessor pokecenterDirection: Integer

  # Movement history
  attr_accessor visitedMaps: Array[bool]

  attr_accessor mapTrail: Array[Integer]

  # Counters
  attr_accessor happinessSteps: Integer

  attr_accessor pokerusTime: Time?

  # Save file
  attr_accessor safesave: bool

  def initialize: () -> void

  def encounter_version=: (Integer value) -> void

  def forced_movement?: () -> bool
end

# ==============================================================================
# This class keeps track of erased and moved events so their position
# can remain after a game is saved and loaded.  This class also includes
# variables that should remain valid only for the current map.
# ==============================================================================
class PokemonMapMetadata
  attr_reader erasedEvents: Hash[[Integer, Integer], bool]

  attr_reader movedEvents: Hash[[Integer, Integer], [Integer, Integer, Integer, bool]]

  attr_accessor strengthUsed: bool

  attr_accessor lower_encounter_rate: bool

  attr_accessor higher_encounter_rate: bool

  attr_accessor lower_level_wild_pokemon: bool

  attr_accessor higher_level_wild_pokemon: bool

  def initialize: () -> void

  def clear: () -> void

  def addErasedEvent: (Integer eventID) -> void

  def addMovedEvent: (Integer eventID) -> void

  def updateMap: () -> void
end


