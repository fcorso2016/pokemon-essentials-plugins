class Game_Temp
  attr_accessor warned_low_battery: bool

  attr_accessor cue_bgm: RPG::AudioFile

  attr_accessor cue_bgm_timer_start: number

  attr_accessor cue_bgm_delay: number
end

# ==============================================================================
# Event movement
# ==============================================================================
module PBMoveRoute
  DOWN: Integer

  LEFT: Integer

  RIGHT: Integer

  UP: Integer

  LOWER_LEFT: Integer

  LOWER_RIGHT: Integer

  UPPER_LEFT: Integer

  UPPER_RIGHT: Integer

  RANDOM: Integer

  TOWARD_PLAYER: Integer

  AWAY_FROM_PLAYER: Integer

  FORWARD: Integer

  BACKWARD: Integer

  JUMP: Integer

  WAIT: Integer

  TURN_DOWN: Integer

  TURN_LEFT: Integer

  TURN_RIGHT: Integer

  TURN_UP: Integer

  TURN_RIGHT90: Integer

  TURN_LEFT90: Integer

  TURN180: Integer

  TURN_RIGHT_OR_LEFT90: Integer

  TURN_RANDOM: Integer

  TURN_TOWARD_PLAYER: Integer

  TURN_AWAY_FROM_PLAYER: Integer

  SWITCH_ON: Integer

  SWITCH_OFF: Integer

  CHANGE_SPEED: Integer

  CHANGE_FREQUENCY: Integer

  WALK_ANIME_ON: Integer

  WALK_ANIME_OFF: Integer

  STEP_ANIME_ON: Integer

  STEP_ANIME_OFF: Integer

  DIRECTION_FIX_ON: Integer

  DIRECTION_FIX_OFF: Integer

  THROUGH_ON: Integer

  THROUGH_OFF: Integer

  ALWAYS_ON_TOP_ON: Integer

  ALWAYS_ON_TOP_OFF: Integer

  GRAPHIC: Integer

  OPACITY: Integer

  BLENDING: Integer

  PLAY_SE: Integer

  SCRIPT: Integer

  SCRIPT_ASYNC: Integer
end

class Object
  # Returns whether the Poké Center should explain Pokérus to the player, if a
  # healed Pokémon has it.
  def pbPokerus?: () -> bool

  def pbBatteryLow?: () -> bool

  def pbCheckAllFainted: () -> void

  def pbOnStepTaken: (bool eventTriggered) -> void

  def pbBattleOnStepTaken: (bool repel_active) -> void

  # ==============================================================================
  # Event locations, terrain tags
  # ==============================================================================
  # NOTE: Assumes the event is 1x1 tile in size. Only returns one tile.
  def pbFacingTile: (?Integer? direction, ?Game_Event? event) -> [Integer, Integer, Integer]

  # NOTE: Assumes the event is 1x1 tile in size. Only returns one tile.
  def pbFacingTileRegular: (?Integer? direction, ?Game_Event? event) -> [Integer, Integer, Integer]

  # Returns whether event is in line with the player, is facing the player and is
  # within distance tiles of the player.
  def pbEventFacesPlayer?: (Game_Event? event, Game_Player? player, Integer distance) -> bool

  # Returns whether event is able to walk up to the player.
  def pbEventCanReachPlayer?: (Game_Event? event, Game_Player? player, Integer distance) -> bool

  # Returns whether the two events are standing next to each other and facing each
  # other.
  def pbFacingEachOther: (untyped event1, untyped event2) -> bool

  # ==============================================================================
  # Audio playing
  # ==============================================================================
  def pbCueBGM: (RPG::AudioFile? bgm, Integer seconds, ?Integer? volume, ?Integer? pitch) -> void

  def pbAutoplayOnTransition: () -> void

  def pbAutoplayOnSave: () -> void

  def pbMoveRoute: (Game_Character event, Array[number | String] commands, ?bool waitComplete) -> RPG::MoveRoute

  # duration is in seconds
  def pbWait: (number duration) { (number) -> void } -> void

  # ==============================================================================
  # Player/event movement in the field
  # ==============================================================================
  def pbSlideOnIce: () -> void

  def pbTurnTowardEvent: (Game_Event event, Game_Event otherEvent) -> void

  def pbMoveTowardPlayer: (Game_Event event) -> void

  # ==============================================================================
  # Bridges, cave escape points, and setting the heal point
  # ==============================================================================
  def pbBridgeOn: (?Integer height) -> void

  def pbBridgeOff: () -> void

  def pbSetEscapePoint: () -> void

  def pbEraseEscapePoint: () -> void

  def pbSetPokemonCenter: () -> void

  # ==============================================================================
  # Partner trainer
  # ==============================================================================
  def pbRegisterPartner: (Symbol | String | GameData::TrainerType tr_type, String tr_name, ?Integer tr_id) -> void

  def pbDeregisterPartner: () -> void

  # ==============================================================================
  # Picking up an item found on the ground
  # ==============================================================================
  def pbItemBall: (Symbol | String | GameData::Item item, ?Integer quantity) -> bool

  # ==============================================================================
  # Being given an item
  # ==============================================================================
  def pbReceiveItem: (Symbol | String | GameData::Item item, ?Integer quantity) -> bool

  # ==============================================================================
  # Buying a prize item from the Game Corner
  # ==============================================================================
  def pbBuyPrize: (Symbol | String | GameData::Item item, ?Integer quantity) -> bool
end

