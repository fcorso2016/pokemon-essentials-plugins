# TypeProf 0.21.3

# Classes
module Graphics
  STOP_WHILE_TRANSITION: bool
  self.@_interrupt_transition: bool?
  @@transition: Transitions::Transition_Base?

  def self.judge_special_transition: (Integer duration, String filename) -> bool
  alias transition_KGC_SpecialTransition transition
  alias update_KGC_SpecialTransition update
end

module Transitions
  class Transition_Base
    DURATION: nil
    @disposed: bool
    @duration: Integer
    @parameters: Array[Integer]
    @timer_start: number
    @overworld_bitmap: Bitmap
    @viewport: Viewport
    @sprites: Array[Sprite]
    @overworld_sprite: Sprite
    @timings: Array[number]

    def initialize: (Integer duration, *Integer args) -> void
    def new_sprite: (Integer x, Integer y, ?Bitmap? bitmap, ?Integer ox, ?Integer oy) -> Sprite
    def timer: -> number
    def dispose: -> void
    def disposed?: -> bool
    def update: -> void
    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class BreakingGlass < Transition_Base
    NUM_SPRITES_X: Integer
    NUM_SPRITES_Y: Integer
    @start_y: Array[Integer]

    def initialize_sprites: -> void
    def set_up_timings: -> void
    def update_anim: -> void
  end

  class ShrinkingPieces < Transition_Base
    NUM_SPRITES_X: Integer
    NUM_SPRITES_Y: Integer

    def initialize_sprites: -> void
    def update_anim: -> void
  end

  class SplashTransition < Transition_Base
    NUM_SPRITES_X: Integer
    NUM_SPRITES_Y: Integer
    SPEED: Integer
    @black_sprite: Sprite
    @start_positions: Array[Integer]
    @move_vectors: Array[Integer]

    def initialize_sprites: -> void
    def set_up_timings: -> void
    def update_anim: -> void

    private
    def rand_sign: -> Integer
  end

  class RandomStripeTransition < Transition_Base
    STRIPE_WIDTH: Integer

    def initialize_sprites: -> void
    def set_up_timings: -> void
    def update_anim: -> void
  end

  class ZoomInTransition < Transition_Base
    def initialize_sprites: -> void
    def update_anim: -> void
  end

  class ScrollScreen < Transition_Base
    def update_anim: -> void
  end

  class MosaicTransition < Transition_Base
    MAX_PIXELLATION_FACTOR: Integer
    @buffer_original: Bitmap?
    @buffer_temp: Bitmap?
    @start_black_fade: number

    def initialize_bitmaps: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class FadeToBlack < Transition_Base
    def update_anim: -> void
  end

  class FadeFromBlack < Transition_Base
    def update_anim: -> void
  end

  class SnakeSquares < Transition_Base
    DURATION: number
    TIME_TO_ZOOM: number
    NUM_SPRITES_X: Integer
    NUM_SPRITES_Y: Integer
    TOTAL_SPRITES: Integer
    @black_bitmap: Bitmap?
    @zoom_x_target: number
    @zoom_y_target: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class DiagonalBubble < Transition_Base
    DURATION: number
    TIME_TO_ZOOM: number
    NUM_SPRITES_X: Integer
    NUM_SPRITES_Y: Integer
    TOTAL_SPRITES: Integer
    @bitmap: Bitmap
    @zoom_x_target: number
    @zoom_y_target: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class RisingSplash < Transition_Base
    DURATION: number
    MAX_WAVE_AMPLITUDE: Integer
    WAVE_SPACING: number
    WAVE_SPEED: number
    MAX_BUBBLE_AMPLITUDE: Integer
    BUBBLES_WAVE_SPEED: number
    @bubble_bitmap: Bitmap
    @splash_bitmap: Bitmap
    @black_bitmap: Bitmap
    @bubbles_sprite: Bitmap
    @splash_sprite: Bitmap
    @black_sprite: Bitmap
    @splash_rising_start: number
    @black_rising_start: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class TwoBallPass < Transition_Base
    DURATION: number
    @black_bitmap: Bitmap
    @ball_bitmap: Bitmap
    @ball_sprites: Array[Sprite]
    @ball_start_x: [Integer, Integer]
    @ball_roll_end: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class SpinBallSplit < Transition_Base
    DURATION: number
    @black_bitmap: Bitmap
    @ball_bitmap: Bitmap
    @overworld_sprites: Array[Sprite]
    @black_sprites: Array[Sprite]
    @ball_sprites: Array[Sprite]
    @ball_spin_end: number
    @slide_start: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class ThreeBallDown < Transition_Base
    DURATION: number
    NUM_SPRITES_X: Integer
    NUM_SPRITES_Y: Integer
    TOTAL_SPRITES: Integer
    BALL_START_Y_OFFSETS: Array[Integer]
    @black_bitmap: Bitmap
    @ball_bitmap: Bitmap
    @zoom_x_target: number
    @zoom_y_target: number
    @ball_sprites: Array[Sprite]
    @black_appear_start: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class BallDown < Transition_Base
    DURATION: number
    @black_bitmap: Bitmap
    @curve_bitmap: Bitmap
    @ball_bitmap: Bitmap
    @ball_sprite: Bitmap
    @ball_appear_end: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class WavyThreeBallUp < Transition_Base
    DURATION: number
    BALL_OFFSETS: Array[number]
    MAX_WAVE_AMPLITUDE: Integer
    WAVE_SPACING: number
    WAVE_SPEED: number
    @black_bitmap: Bitmap
    @ball_bitmap: Bitmap
    @ball_sprites: Array[Sprite]
    @black_trail_sprites: Array[Sprite]
    @ball_rising_start: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class WavySpinBall < Transition_Base
    DURATION: number
    MAX_WAVE_AMPLITUDE: Integer
    WAVE_SPACING: number
    WAVE_SPEED: number
    @black_bitmap: Bitmap
    @ball_bitmap: Bitmap
    @ball_sprite: Sprite
    @black_sprite: Sprite
    @ball_appear_end: number
    @black_appear_start: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class FourBallBurst < Transition_Base
    DURATION: number
    @black_1_bitmap: Bitmap
    @black_2_bitmap: Bitmap
    @black_3_bitmap: Bitmap
    @black_4_bitmap: Bitmap
    @ball_bitmap: Sprite
    @ball_sprites: Array[Sprite]
    @ball_appear_end: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class VSTrainer < Transition_Base
    DURATION: number
    BAR_Y: Integer
    BAR_SCROLL_SPEED: Integer
    BAR_MASK: Array[Integer]
    FOE_SPRITE_X_LIMIT: Integer
    FOE_SPRITE_X: Integer
    @bar_bitmap: Bitmap
    @vs_1_bitmap: Bitmap
    @vs_2_bitmap: Bitmap
    @foe_bitmap: Bitmap
    @black_bitmap: Bitmap
    @flash_viewport: Viewport
    @rear_black_sprite: Sprite
    @bar_mask_sprite: Sprite
    @vs_x: Integer
    @vs_y: Integer
    @vs_main_sprite: Sprite
    @vs_1_sprite: Sprite
    @vs_2_sprite: Sprite
    @foe_sprite: Sprite
    @text_sprite: Sprite
    @black_sprite: Sprite
    @bar_x: Integer
    @bar_appear_end: number
    @vs_appear_start: number
    @vs_appear_start_2: number
    @vs_shrink_time: number
    @vs_appear_final: number
    @foe_appear_start: number
    @foe_appear_end: number
    @flash_start: number
    @flash_duration: number
    @fade_to_white_start: number
    @fade_to_white_end: number
    @fade_to_black_start: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class VSEliteFour < Transition_Base
    DURATION: number
    BAR_X_INDENT: Integer
    BAR_Y_INDENT: Integer
    BAR_OVERSHOOT: Integer
    TRAINER_X_OFFSET: Integer
    TRAINER_Y_OFFSET: Integer
    BAR_HEIGHT: Integer
    FOE_SPRITE_X_LIMIT: Integer
    FOE_SPRITE_X: Integer
    @bar_bitmap: Bitmap
    @vs_1_bitmap: Bitmap
    @vs_2_bitmap: Bitmap
    @player_bitmap: Bitmap
    @foe_bitmap: Bitmap
    @black_bitmap: Bitmap
    @num_bar_frames: Integer
    @flash_viewport: Viewport
    @rear_black_sprite: Sprite
    @player_bar_x: Integer
    @player_bar_start_x: Integer
    @player_bar_y: Integer
    @player_bar_sprite: Sprite
    @foe_bar_x: Integer
    @foe_bar_start_x: Integer
    @foe_bar_y: Integer
    @foe_bar_sprite: Sprite
    @player_sprite: Sprite
    @foe_sprite: Sprite
    @text_sprite: Sprite
    @vs_main_sprite: Sprite
    @vs_1_sprite: Sprite
    @vs_2_sprite: Sprite
    @black_sprite: Sprite
    @flash_1_start: number
    @flash_1_duration: number
    @bar_appear_start: number
    @bar_appear_end: number
    @vs_appear_start: number
    @vs_appear_start_2: number
    @vs_shrink_time: number
    @vs_appear_final: number
    @flash_start: number
    @flash_duration: number
    @fade_to_white_start: number
    @fade_to_white_end: number
    @fade_to_black_start: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class RocketGrunt < Transition_Base
    DURATION: number
    ROCKET_X: Array[number]
    ROCKET_Y: Array[number]
    ROCKET_ANGLE: Array[number]
    @black_1_bitmap: Bitmap
    @black_2_bitmap: Bitmap
    @black_3_bitmap: Bitmap
    @black_4_bitmap: Bitmap
    @rocket_bitmap: Bitmap
    @rocket_sprites: Array[Sprite]
    @rocket_appear_end: number
    @rocket_appear_delay: number
    @rocket_appear_time: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end

  class VSRocketAdmin < Transition_Base
    DURATION: number
    STROBE_SCROLL_SPEED: Integer
    FOE_SPRITE_Y: Integer
    @strobes_bitmap: Bitmap
    @bg_1_bitmap: Bitmap
    @bg_2_bitmap: Bitmap
    @foe_bitmap: Bitmap
    @black_bitmap: Bitmap
    @flash_viewport: Viewport
    @bg_1_sprite: Sprite
    @bg_2_sprite: Sprite
    @foe_sprite: Sprite
    @text_sprite: Sprite
    @black_sprite: Sprite
    @strobes_x: Integer
    @strobe_appear_end: number
    @bg_1_appear_start: number
    @bg_1_appear_end: number
    @bg_2_appear_start: number
    @bg_2_appear_end: number
    @flash_end: number
    @foe_disappear_start: number
    @foe_disappear_end: number
    @fade_to_white_end: number
    @fade_to_black_start: number

    def initialize_bitmaps: -> void
    def initialize_sprites: -> void
    def set_up_timings: -> void
    def dispose_all: -> void
    def update_anim: -> void
  end
end



