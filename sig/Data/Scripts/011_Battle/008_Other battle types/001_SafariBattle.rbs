# ==============================================================================
# Simple battler class for the wild PokÃ©mon in a Safari Zone battle
# ==============================================================================
class Battle::FakeBattler
  include _BattlerBase

  attr_reader battle: Battle

  attr_reader index: Integer

  attr_reader pokemon: Pokemon

  attr_reader owned: bool

  def initialize: (Battle battle, Integer index) -> void

  def pbThis: (?bool lowerCase) -> Battle::FakeBattler

  def pbReset: () -> void
end

# ==============================================================================
# Data box for safari battles
# ==============================================================================
class Battle::Scene::SafariDataBox < Sprite
  include _Refreshable

  @battle: Battle?

  @contents: Bitmap
  @databox: AnimatedBitmap

  attr_accessor selected: Integer

  def initialize: (Battle? battle, ?Viewport? viewport) -> void
end

# ==============================================================================
# Shows the player throwing bait at a wild PokÃ©mon in a Safari battle.
# ==============================================================================
class Battle::Scene::Animation::ThrowBait < Battle::Scene::Animation
  include Battle::Scene::Animation::BallAnimationMixin

  def initialize: (Hash[String, _Visualizable] sprites, Viewport viewport, Battle::Battler battler) -> void

end

# ==============================================================================
# Shows the player throwing a rock at a wild PokÃ©mon in a Safari battle.
# ==============================================================================
class Battle::Scene::Animation::ThrowRock < Battle::Scene::Animation
  include Battle::Scene::Animation::BallAnimationMixin

  @battler: Battle::Battler

  @trainer: Trainer?

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Battle::Battler battler) -> void
end

# ==============================================================================
# Safari Zone battle scene (the visuals of the battle)
# ==============================================================================
class Battle::Scene
  def pbSafariStart: () -> void

  def pbSafariCommandMenu: (Integer index) -> Integer

  def pbThrowBait: () -> void

  def pbThrowRock: () -> void

  alias __safari__pbThrowSuccess pbThrowSuccess
end

# ==============================================================================
# Safari Zone battle class
# ==============================================================================
class SafariBattle
  include _BattleBase

  @caughtPokemon: Array[Pokemon]
  @peer: Battle::Peer
  @scene: Battle::Scene

  attr_reader battlers: Array[Battle::FakeBattler]

  attr_accessor sideSizes: Array[Integer]

  attr_accessor backdrop: String

  attr_accessor backdropBase: String?

  attr_accessor time: Numeric

  attr_accessor environment: Symbol

  attr_reader weather: Symbol

  attr_reader player: Array[Player]

  attr_accessor party2: Array[Pokemon]

  attr_accessor canRun: bool

  attr_accessor canLose: bool

  attr_accessor switchStyle: bool

  attr_accessor showAnims: bool

  attr_accessor expGain: bool

  attr_accessor moneyGain: bool

  attr_accessor rules: Hash[String, bool]

  attr_accessor ballCount: Integer

  include Battle::CatchAndStoreMixin

  # ----------------------------------------------------------------------------
  # Initialize the battle class
  # ----------------------------------------------------------------------------
  def initialize: (Battle::Scene scene, Player player, Array[Pokemon] party2) -> void

  class BattleAbortedException < Exception
  end

  # ----------------------------------------------------------------------------
  # Safari battle-specific methods
  # ----------------------------------------------------------------------------
  def pbEscapeRate: (Integer catch_rate) -> Integer
end


