class Battle::Battler
  # ============================================================================
  # Get move's user
  # ============================================================================
  def pbFindUser: ([Symbol, Integer, Battle::Move?, Integer] _choice, Battle::Move _move) -> Battle::Battler

  def pbChangeUser: ([Symbol, Integer, Battle::Move?, Integer] choice, Battle::Move move, Battle::Battler user) -> Battle::Battler

  # ============================================================================
  # Get move's default target(s)
  # ============================================================================
  def pbFindTargets: ([Symbol, Integer, Battle::Move?, Integer] choice, Battle::Move move, Battle::Battler user) -> Array[Battle::Battler]

  # ============================================================================
  # Redirect attack to another target
  # ============================================================================
  def pbChangeTargets: (Battle::Move move, Battle::Battler user, Array[Battle::Battler] targets) -> Array[Battle::Battler]

  def pbChangeTargetByAbility: (Symbol drawingAbility, Symbol drawnType, Battle::Move move, Battle::Battler user, Array[Battle::Battler] targets, Integer priority, bool nearOnly) -> Array[Battle::Battler]

  # ============================================================================
  # Register target
  # ============================================================================
  def pbAddTarget: (Array[Battle::Battler] targets, Battle::Battler user, Battle::Battler target, Battle::Move move, ?bool nearOnly, ?bool allowUser) -> bool

  def pbAddTargetRandomAlly: (Array[Battle::Battler] targets, Battle::Battler user, Battle::Move move, ?bool nearOnly) -> void

  def pbAddTargetRandomFoe: (Array[Battle::Battler] targets, Battle::Battler user, Battle::Move move, ?bool nearOnly) -> void
end


