class Battle::Battler
  # ============================================================================
  # Turn processing
  # ============================================================================
  def pbProcessTurn: ([Symbol, Integer, Battle::Move?, Integer] choice, ?bool tryFlee) -> bool

  # ============================================================================
  #
  # ============================================================================
  def pbBeginTurn: ([Symbol, Integer, Battle::Move?, Integer] _choice) -> void

  # Called when the usage of various multi-turn moves is disrupted due to
  # failing pbTryUseMove, being ineffective against all targets, or because
  # Pursuit was used specially to intercept a switching foe.
  # Cancels the use of multi-turn moves and counters thereof. Note that Hyper
  # Beam's effect is NOT cancelled.
  def pbCancelMoves: (?bool full_cancel) -> void

  def pbEndTurn: ([Symbol, Integer, Battle::Move?, Integer] _choice) -> void

  def pbConfusionDamage: (String msg) -> void

  # ============================================================================
  # Simple "use move" method, used when a move calls another move and for Future
  # Sight's attack
  # ============================================================================
  def pbUseMoveSimple: (Symbol moveID, ?Integer target, ?Integer idxMove, ?bool specialUsage) -> void

  # ============================================================================
  # Master "use move" method
  # ============================================================================
  def pbUseMove: ([Symbol, Integer, Battle::Move?, Integer] choice, ?bool specialUsage) -> void

  # ============================================================================
  # Attack a single target
  # ============================================================================
  def pbProcessMoveHit: (Battle::Move move, Battle::Battler user, Array[Integer] targets, Integer hitNum, bool skipAccuracyCheck) -> bool
end


