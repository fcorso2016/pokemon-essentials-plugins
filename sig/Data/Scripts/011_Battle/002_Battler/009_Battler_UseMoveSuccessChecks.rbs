class Battle::Battler
  # ============================================================================
  # Decide whether the trainer is allowed to tell the PokÃƒÂ©mon to use the given
  # move. Called when choosing a command for the round.
  # Also called when processing the PokÃƒÂ©mon's action, because these effects also
  # prevent PokÃƒÂ©mon action. Relevant because these effects can become active
  # earlier in the same round (after choosing the command but before using the
  # move) or an unusable move may be called by another move such as Metronome.
  # ============================================================================
  def pbCanChooseMove?: (Battle::Move move, bool commandPhase, ?bool showMessages, ?bool specialUsage) -> bool

  # ============================================================================
  # Obedience check
  # ============================================================================
  # Return true if PokÃƒÂ©mon continues attacking (although it may have chosen to
  # use a different move in disobedience), or false if attack stops.
  def pbObedienceCheck?: ([Symbol, Integer, Battle::Move?, Integer] choice) -> bool

  def pbDisobey: ([Symbol, Integer, Battle::Move?, Integer] choice, Integer badge_level) -> bool

  # ============================================================================
  # Check whether the user (self) is able to take action at all.
  # If this returns true, and if PP isn't a problem, the move will be considered
  # to have been used (even if it then fails for whatever reason).
  # ============================================================================
  def pbTryUseMove: ([Symbol, Integer, Battle::Move?, Integer] choice, Battle::Move move, bool specialUsage, bool skipAccuracyCheck) -> bool

  # ============================================================================
  # Initial success check against the target. Done once before the first hit.
  # Includes move-specific failure conditions, protections and type immunities.
  # ============================================================================
  def pbSuccessCheckAgainstTarget: (Battle::Move move, Battle::Battler user, Battle::Battler target, Array[Integer] targets) -> bool

  # ============================================================================
  # Per-hit success check against the target.
  # Includes semi-invulnerable move use and accuracy calculation.
  # ============================================================================
  def pbSuccessCheckPerHit: (Battle::Move move, Battle::Battler user, Battle::Battler target, bool skipAccuracyCheck) -> bool

  # ============================================================================
  # Message shown when a move fails the per-hit success check above.
  # ============================================================================
  def pbMissMessage: (Battle::Move move, Battle::Battler user, Battle::Battler target) -> void
end



