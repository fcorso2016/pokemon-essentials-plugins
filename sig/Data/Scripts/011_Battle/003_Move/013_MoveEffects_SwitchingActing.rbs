# ==============================================================================
# User flees from battle. (Teleport (Gen 7-))
# ==============================================================================
class Battle::Move::FleeFromBattle < Battle::Move
end

# ==============================================================================
# User switches out. If user is a wild PokÃ©mon, ends the battle instead.
# (Teleport (Gen 8+))
# ==============================================================================
class Battle::Move::SwitchOutUserStatusMove < Battle::Move
end

# ==============================================================================
# After inflicting damage, user switches out. Ignores trapping moves.
# (Flip Turn, U-turn, Volt Switch)
# ==============================================================================
class Battle::Move::SwitchOutUserDamagingMove < Battle::Move
end

# ==============================================================================
# Decreases the target's Attack and Special Attack by 1 stage each. Then, user
# switches out. Ignores trapping moves. (Parting Shot)
# ==============================================================================
class Battle::Move::LowerTargetAtkSpAtk1SwitchOutUser < Battle::Move::TargetMultiStatDownMove
end

# ==============================================================================
# User switches out. Various effects affecting the user are passed to the
# replacement. (Baton Pass)
# ==============================================================================
class Battle::Move::SwitchOutUserPassOnEffects < Battle::Move
end

# ==============================================================================
# When used against a sole wild PokÃ©mon, makes target flee and ends the battle;
# fails if target is a higher level than the user.
# When used against a trainer's PokÃ©mon, target switches out.
# For status moves. (Roar, Whirlwind)
# ==============================================================================
class Battle::Move::SwitchOutTargetStatusMove < Battle::Move
end

# ==============================================================================
# When used against a sole wild PokÃ©mon, makes target flee and ends the battle;
# fails if target is a higher level than the user.
# When used against a trainer's PokÃ©mon, target switches out.
# For damaging moves. (Circle Throw, Dragon Tail)
# ==============================================================================
class Battle::Move::SwitchOutTargetDamagingMove < Battle::Move
end

# ==============================================================================
# Trapping move. Traps for 5 or 6 rounds. Trapped PokÃ©mon lose 1/16 of max HP
# at end of each round.
# ==============================================================================
class Battle::Move::BindTarget < Battle::Move
end

# ==============================================================================
# Trapping move. Traps for 5 or 6 rounds. Trapped PokÃ©mon lose 1/16 of max HP
# at end of each round. (Whirlpool)
# Power is doubled if target is using Dive. Hits some semi-invulnerable targets.
# ==============================================================================
class Battle::Move::BindTargetDoublePowerIfTargetUnderwater < Battle::Move::BindTarget
end

# ==============================================================================
# Target can no longer switch out or flee, as long as the user remains active.
# Trapping is considered an additional effect for damaging moves.
# (Anchor Shot, Block, Mean Look, Spider Web, Spirit Shackle)
# ==============================================================================
class Battle::Move::TrapTargetInBattle < Battle::Move
end

# ==============================================================================
# Target can no longer switch out or flee, as long as the user remains active.
# Trapping is not considered an additional effect. (Thousand Waves)
# ==============================================================================
class Battle::Move::TrapTargetInBattleMainEffect < Battle::Move
end

# ==============================================================================
# The target can no longer switch out or flee, while the user remains in battle.
# At the end of each round, the target's Defense and Special Defense are lowered
# by 1 stage each. (Octolock)
# ==============================================================================
class Battle::Move::TrapTargetInBattleLowerTargetDefSpDef1EachTurn < Battle::Move
end

# ==============================================================================
# Prevents the user and the target from switching out or fleeing. This effect
# isn't applied if either PokÃ©mon is already prevented from switching out or
# fleeing. (Jaw Lock)
# ==============================================================================
class Battle::Move::TrapUserAndTargetInBattle < Battle::Move
end

# ==============================================================================
# No PokÃ©mon can switch out or flee until the end of the next round. (Fairy Lock)
# ==============================================================================
class Battle::Move::TrapAllBattlersInBattleForOneTurn < Battle::Move
end

# ==============================================================================
# Interrupts a foe switching out or using U-turn/Volt Switch/Parting Shot. Power
# is doubled in that case. (Pursuit)
# (Handled in Battle's pbAttackPhase): Makes this attack happen before switching.
# ==============================================================================
class Battle::Move::PursueSwitchingFoe < Battle::Move
end

# ==============================================================================
# Fails if user has not been hit by an opponent's physical move this round.
# (Shell Trap)
# ==============================================================================
class Battle::Move::UsedAfterUserTakesPhysicalDamage < Battle::Move
end

# ==============================================================================
# Power is doubled if a user's ally has already used this move this round. (Round)
# If an ally is about to use the same move, make it go next, ignoring priority.
# ==============================================================================
class Battle::Move::UsedAfterAllyRoundWithDoublePower < Battle::Move
end

# ==============================================================================
# Target moves immediately after the user, ignoring priority/speed. (After You)
# ==============================================================================
class Battle::Move::TargetActsNext < Battle::Move
end

# ==============================================================================
# Target moves last this round, ignoring priority/speed. (Quash)
# ==============================================================================
class Battle::Move::TargetActsLast < Battle::Move
end

# ==============================================================================
# The target uses its most recent move again. (Instruct)
# ==============================================================================
class Battle::Move::TargetUsesItsLastUsedMoveAgain < Battle::Move
  attr_reader moveBlacklist: Array[String]
end

# ==============================================================================
# For 5 rounds, for each priority bracket, slow PokÃ©mon move before fast ones.
# (Trick Room)
# ==============================================================================
class Battle::Move::StartSlowerBattlersActFirst < Battle::Move
end

# ==============================================================================
# If Grassy Terrain applies, priority is increased by 1. (Grassy Glide)
# ==============================================================================
class Battle::Move::HigherPriorityInGrassyTerrain < Battle::Move
end

# ==============================================================================
# Target's last move used loses 3 PP. Damaging move. (Eerie Spell)
# ==============================================================================
class Battle::Move::LowerPPOfTargetLastMoveBy3 < Battle::Move
end

# ==============================================================================
# Target's last move used loses 4 PP. Status move. (Spite)
# ==============================================================================
class Battle::Move::LowerPPOfTargetLastMoveBy4 < Battle::Move
end

# ==============================================================================
# For 5 rounds, disables the last move the target used. (Disable)
# ==============================================================================
class Battle::Move::DisableTargetLastMoveUsed < Battle::Move
end

# ==============================================================================
# The target can no longer use the same move twice in a row. (Torment)
# NOTE: Torment is only supposed to start applying at the end of the round in
#       which it is used, unlike Taunt which starts applying immediately. I've
#       decided to make Torment apply immediately.
# ==============================================================================
class Battle::Move::DisableTargetUsingSameMoveConsecutively < Battle::Move
end

# ==============================================================================
# For 4 rounds, the target must use the same move each round. (Encore)
# ==============================================================================
class Battle::Move::DisableTargetUsingDifferentMove < Battle::Move
  attr_reader moveBlacklist: Array[String]
end

# ==============================================================================
# For 4 rounds, disables the target's non-damaging moves. (Taunt)
# ==============================================================================
class Battle::Move::DisableTargetStatusMoves < Battle::Move
end

# ==============================================================================
# For 5 rounds, disables the target's healing moves. (Heal Block)
# ==============================================================================
class Battle::Move::DisableTargetHealingMoves < Battle::Move
end

# ==============================================================================
# Target cannot use sound-based moves for 2 more rounds. (Throat Chop)
# ==============================================================================
class Battle::Move::DisableTargetSoundMoves < Battle::Move
end

# ==============================================================================
# Disables all target's moves that the user also knows. (Imprison)
# ==============================================================================
class Battle::Move::DisableTargetMovesKnownByUser < Battle::Move
end


