# ==============================================================================
# No additional effect.
# ==============================================================================
class Battle::Move::None < Battle::Move
end

# ==============================================================================
# Does absolutely nothing. Shows a special message. (Celebrate)
# ==============================================================================
class Battle::Move::DoesNothingCongratulations < Battle::Move
end

# ==============================================================================
# Does absolutely nothing. (Hold Hands)
# ==============================================================================
class Battle::Move::DoesNothingFailsIfNoAlly < Battle::Move
end

# ==============================================================================
# Does absolutely nothing. (Splash)
# ==============================================================================
class Battle::Move::DoesNothingUnusableInGravity < Battle::Move
end

# ==============================================================================
# Scatters coins that the player picks up after winning the battle. (Pay Day)
# NOTE: In Gen 6+, if the user levels up after this move is used, the amount of
#       money picked up depends on the user's new level rather than its level
#       when it used the move. I think this is silly, so I haven't coded this
#       effect.
# ==============================================================================
class Battle::Move::AddMoneyGainedFromBattle < Battle::Move
  def pbEffectGeneral: (untyped user) -> untyped
end

# ==============================================================================
# Doubles the prize money the player gets after winning the battle. (Happy Hour)
# ==============================================================================
class Battle::Move::DoubleMoneyGainedFromBattle < Battle::Move
end

# ==============================================================================
# Fails if this isn't the user's first turn. (First Impression)
# ==============================================================================
class Battle::Move::FailsIfNotUserFirstTurn < Battle::Move
end

# ==============================================================================
# Fails unless user has already used all other moves it knows. (Last Resort)
# ==============================================================================
class Battle::Move::FailsIfUserHasUnusedMove < Battle::Move
end

# ==============================================================================
# Fails unless user has consumed a berry at some point. (Belch)
# ==============================================================================
class Battle::Move::FailsIfUserNotConsumedBerry < Battle::Move
end

# ==============================================================================
# Fails if the target is not holding an item, or if the target is affected by
# Magic Room/Klutz. (Poltergeist)
# ==============================================================================
class Battle::Move::FailsIfTargetHasNoItem < Battle::Move
end

# ==============================================================================
# Only damages PokÃƒÂ©mon that share a type with the user. (Synchronoise)
# ==============================================================================
class Battle::Move::FailsUnlessTargetSharesTypeWithUser < Battle::Move
end

# ==============================================================================
# Fails if user was hit by a damaging move this round. (Focus Punch)
# ==============================================================================
class Battle::Move::FailsIfUserDamagedThisTurn < Battle::Move
end

# ==============================================================================
# Fails if the target didn't choose a damaging move to use this round, or has
# already moved. (Sucker Punch)
# ==============================================================================
class Battle::Move::FailsIfTargetActed < Battle::Move
end

# ==============================================================================
# If attack misses, user takes crash damage of 1/2 of max HP.
# (High Jump Kick, Jump Kick)
# ==============================================================================
class Battle::Move::CrashDamageIfFailsUnusableInGravity < Battle::Move
  def pbCrashDamage: (Battle::Battler user) -> void
end

# ==============================================================================
# Starts sunny weather. (Sunny Day)
# ==============================================================================
class Battle::Move::StartSunWeather < Battle::Move::WeatherMove
end

# ==============================================================================
# Starts rainy weather. (Rain Dance)
# ==============================================================================
class Battle::Move::StartRainWeather < Battle::Move::WeatherMove
end

# ==============================================================================
# Starts sandstorm weather. (Sandstorm)
# ==============================================================================
class Battle::Move::StartSandstormWeather < Battle::Move::WeatherMove
end

# ==============================================================================
# Starts hail weather. (Hail)
# ==============================================================================
class Battle::Move::StartHailWeather < Battle::Move::WeatherMove
end

# ==============================================================================
# For 5 rounds, creates an electric terrain which boosts Electric-type moves and
# prevents PokÃƒÂ©mon from falling asleep. Affects non-airborne PokÃƒÂ©mon only.
# (Electric Terrain)
# ==============================================================================
class Battle::Move::StartElectricTerrain < Battle::Move
end

# ==============================================================================
# For 5 rounds, creates a grassy terrain which boosts Grass-type moves and heals
# PokÃƒÂ©mon at the end of each round. Affects non-airborne PokÃƒÂ©mon only.
# (Grassy Terrain)
# ==============================================================================
class Battle::Move::StartGrassyTerrain < Battle::Move
end

# ==============================================================================
# For 5 rounds, creates a misty terrain which weakens Dragon-type moves and
# protects PokÃƒÂ©mon from status problems. Affects non-airborne PokÃƒÂ©mon only.
# (Misty Terrain)
# ==============================================================================
class Battle::Move::StartMistyTerrain < Battle::Move
end

# ==============================================================================
# For 5 rounds, creates a psychic terrain which boosts Psychic-type moves and
# prevents PokÃƒÂ©mon from being hit by >0 priority moves. Affects non-airborne
# PokÃƒÂ©mon only. (Psychic Terrain)
# ==============================================================================
class Battle::Move::StartPsychicTerrain < Battle::Move
end

# ==============================================================================
# Removes the current terrain. Fails if there is no terrain in effect.
# (Steel Roller)
# ==============================================================================
class Battle::Move::RemoveTerrain < Battle::Move
end

# ==============================================================================
# Entry hazard. Lays spikes on the opposing side (max. 3 layers). (Spikes)
# ==============================================================================
class Battle::Move::AddSpikesToFoeSide < Battle::Move
end

# ==============================================================================
# Entry hazard. Lays poison spikes on the opposing side (max. 2 layers).
# (Toxic Spikes)
# ==============================================================================
class Battle::Move::AddToxicSpikesToFoeSide < Battle::Move
end

# ==============================================================================
# Entry hazard. Lays stealth rocks on the opposing side. (Stealth Rock)
# ==============================================================================
class Battle::Move::AddStealthRocksToFoeSide < Battle::Move
end

# ==============================================================================
# Entry hazard. Lays stealth rocks on the opposing side. (Sticky Web)
# ==============================================================================
class Battle::Move::AddStickyWebToFoeSide < Battle::Move
end

# ==============================================================================
# All effects that apply to one side of the field are swapped to the opposite
# side. (Court Change)
# ==============================================================================
class Battle::Move::SwapSideEffects < Battle::Move
  attr_reader number_effects: Array[Integer]

  attr_reader boolean_effects: Array[Integer]
end

# ==============================================================================
# User turns 1/4 of max HP into a substitute. (Substitute)
# ==============================================================================
class Battle::Move::UserMakeSubstitute < Battle::Move
  @subLife: Integer
end

# ==============================================================================
# Removes trapping moves, entry hazards and Leech Seed on user/user's side.
# Raises user's Speed by 1 stage (Gen 8+). (Rapid Spin)
# ==============================================================================
class Battle::Move::RemoveUserBindingAndEntryHazards < Battle::Move::StatUpMove
end

# ==============================================================================
# Attacks 2 rounds in the future. (Doom Desire, Future Sight)
# ==============================================================================
class Battle::Move::AttackTwoTurnsLater < Battle::Move
end

# ==============================================================================
# User switches places with its ally. (Ally Switch)
# ==============================================================================
class Battle::Move::UserSwapsPositionsWithAlly < Battle::Move
  @idxAlly: Integer
end

# ==============================================================================
# If a PokÃƒÂ©mon makes contact with the user before it uses this move, the
# attacker is burned. (Beak Blast)
# ==============================================================================
class Battle::Move::BurnAttackerBeforeUserActs < Battle::Move
end



