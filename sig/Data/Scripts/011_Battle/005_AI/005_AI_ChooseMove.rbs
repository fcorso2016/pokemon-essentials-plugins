# ==============================================================================
#
# ==============================================================================
class Battle::AI
  MOVE_FAIL_SCORE: Integer

  MOVE_USELESS_SCORE: Integer

  MOVE_BASE_SCORE: Integer

  # Returns a value between 0.0 and 1.0. All move scores are lowered by this
  # value multiplied by the highest-scoring move's score.
  def move_score_threshold: () -> number

  # Get scores for the user's moves.
  # NOTE: For any move with a target type that can target a foe (or which
  #       includes a foe(s) if it has multiple targets), the score calculated
  #       for a target ally will be inverted. The MoveHandlers for those moves
  #       should therefore treat an ally as a foe when calculating a score
  #       against it.
  def pbGetMoveScores: () -> Array[Array[Integer]]

  # If the target of a move can be changed by an external effect, this method
  # returns the battler index of the new target.
  def get_redirected_target: (GameData::Target target_data) -> Integer?

  def add_move_to_choices: (Array[Array[Integer]] choices, Integer idxMove, Integer score, ?Integer idxTarget) -> void

  # Set some extra class variables for the move being assessed.
  def set_up_move_check: (Battle::Move move) -> void

  # Set some extra class variables for the target being assessed.
  def set_up_move_check_target: (AIBattler? target) -> void

  # Returns whether the move will definitely fail (assuming no battle conditions
  # change between now and using the move).
  def pbPredictMoveFailure: () -> bool

  # Returns whether the move will definitely fail against the target (assuming
  # no battle conditions change between now and using the move).
  def pbPredictMoveFailureAgainstTarget: () -> bool

  # Get a score for the given move being used against the given target.
  # Assumes def set_up_move_check has previously been called.
  def pbGetMoveScore: (?Array[AIBattler]? targets) -> Integer

  # Returns the score of @move being used against @target. A return value of -1
  # means the move will fail or do nothing against the target.
  # Assumes def set_up_move_check and def set_up_move_check_target have
  # previously been called.
  def pbGetMoveScoreAgainstTarget: () -> Integer

  # Make the final choice of which move to use depending on the calculated
  # scores for each move. Moves with higher scores are more likely to be chosen.
  def pbChooseMove: (Array[Array[Integer]] choices) -> void
end



