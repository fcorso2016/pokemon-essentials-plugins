# ==============================================================================
#
# ==============================================================================
class Battle::AI
  # Main method for calculating the score for moves that raise a battler's
  # stat(s).
  # By default, assumes that a stat raise is a good thing. However, this score
  # is inverted (by desire_mult) if the target opposes the user. If the move
  # could target a foe but is targeting an ally, the score is also inverted, but
  # only because it is inverted again in def pbGetMoveScoreAgainstTarget.
  def get_score_for_target_stat_raise: (Integer score, AIBattler target, Array[Symbol | Integer] stat_changes, ?bool whole_effect, ?bool fixed_change, ?bool ignore_contrary) -> Integer

  # Returns whether the target raising the given stat will have any impact.
  def stat_raise_worthwhile?: (AIBattler target, Symbol stat, ?bool fixed_change) -> bool

  # Make score changes based on the general concept of raising stats at all.
  def get_target_stat_raise_score_generic: (Integer score, AIBattler target, Array[Symbol | Integer] stat_changes, ?Integer desire_mult) -> Integer

  # Make score changes based on the raising of a specific stat.
  def get_target_stat_raise_score_one: (Integer score, AIBattler target, Symbol stat, Integer increment, ?Integer desire_mult) -> Integer

  # Main method for calculating the score for moves that lower a battler's
  # stat(s).
  # By default, assumes that a stat drop is a good thing. However, this score
  # is inverted (by desire_mult) if the target is the user or an ally. This
  # inversion does not happen if the move could target a foe but is targeting an
  # ally, but only because it is inverted in def pbGetMoveScoreAgainstTarget
  # instead.
  def get_score_for_target_stat_drop: (Integer score, AIBattler target, Array[Symbol | Integer] stat_changes, ?bool whole_effect, ?bool fixed_change, ?bool ignore_contrary) -> Integer

  # Returns whether the target lowering the given stat will have any impact.
  def stat_drop_worthwhile?: (AIBattler target, Symbol stat, ?bool fixed_change) -> bool

  # Make score changes based on the general concept of lowering stats at all.
  def get_target_stat_drop_score_generic: (Integer score, AIBattler target, Array[Symbol | Integer] stat_changes, ?Integer desire_mult) -> Integer

  # Make score changes based on the lowering of a specific stat.
  def get_target_stat_drop_score_one: (Integer score, AIBattler target, Symbol stat, Integer decrement, ?Integer desire_mult) -> Integer

  def get_score_for_weather: (Symbol weather, AIBattler move_user, ?bool starting) -> Integer

  def get_score_for_terrain: (Symbol terrain, AIBattler move_user, ?bool starting) -> Integer
end


