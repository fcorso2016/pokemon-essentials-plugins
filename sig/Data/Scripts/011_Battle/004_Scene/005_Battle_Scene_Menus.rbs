# ==============================================================================
# Base class for all three menu classes below
# ==============================================================================
class Battle::Scene::MenuBase
  include _CheckedDisposable
  include _Refreshable
  include _Updatable

  @disposed: bool

  @sprites: Hash[String, _Visualizable]

  @visibility: Hash[String, bool]

  attr_accessor x: Integer

  attr_accessor y: Integer

  attr_reader z: Integer

  attr_reader visible: bool

  attr_reader color: Color

  attr_reader index: Integer

  attr_reader mode: Integer

  # NOTE: Button width is half the width of the graphic containing them all.
  BUTTON_HEIGHT: Integer

  TEXT_BASE_COLOR: Color

  TEXT_SHADOW_COLOR: Color

  def initialize: (?Viewport? viewport) -> void

  def z=: (Integer value) -> void

  def visible=: (bool value) -> void

  def color=: (Color value) -> void

  def index=: (Integer value) -> void

  def mode=: (Integer value) -> void

  def addSprite: (String key, _Visualizable sprite) -> void

  def setIndexAndMode: (Integer index, Integer mode) -> void
end

# ==============================================================================
# Command menu (Fight/PokÃƒÂ©mon/Bag/Run)
# ==============================================================================
class Battle::Scene::CommandMenu < Battle::Scene::MenuBase
  # If true, displays graphics from Graphics/UI/Battle/overlay_command.png
  #     and Graphics/UI/Battle/cursor_command.png.
  # If false, just displays text and the command window over the graphic
  #     Graphics/UI/Battle/overlay_message.png. You will need to edit def
  #     pbShowWindow to make the graphic appear while the command menu is being
  #     displayed.
  USE_GRAPHICS: bool

  # Lists of which button graphics to use in different situations/types of battle.
  MODES: Array[[Integer, Integer, Integer, Integer]]

  @buttonBitmap: AnimatedBitmap
  @buttons: Array[Sprite]
  @cmdWindow: Window_CommandPokemon
  @msgBox: Window_UnformattedTextPokemon

  def initialize: (Viewport? viewport, Integer z) -> void

  def setTexts: (Array[String] value) -> void

  def refreshButtons: () -> void
end

# ==============================================================================
# Fight menu (choose a move)
# ==============================================================================
class Battle::Scene::FightMenu < Battle::Scene::MenuBase
  @buttonBitmap: AnimatedBitmap

  @buttons: Array[Sprite]
  @cmdWindow: Window_CommandPokemon
  @infoOverlay: BitmapSprite
  @megaButton: Sprite
  @megaEvoBitmap: AnimatedBitmap
  @msgBox: Window_AdvancedTextPokemon
  @overlay: BitmapSprite
  @shiftBitmap: AnimatedBitmap
  @shiftButton: Sprite
  @typeBitmap: AnimatedBitmap

  @typeIcon: Sprite

  attr_reader battler: Battle::Battler?

  attr_reader shiftMode: Integer

  GET_MOVE_TEXT_COLOR_FROM_MOVE_BUTTON: bool

  # If true, displays graphics from Graphics/UI/Battle/overlay_fight.png
  #     and Graphics/UI/Battle/cursor_fight.png.
  # If false, just displays text and the command window over the graphic
  #     Graphics/UI/Battle/overlay_message.png. You will need to edit def
  #     pbShowWindow to make the graphic appear while the command menu is being
  #     displayed.
  USE_GRAPHICS: bool

  TYPE_ICON_HEIGHT: Integer

  # Text colours of PP of selected move
  PP_COLORS: ::Array[Color]

  def initialize: (Viewport? viewport, Integer z) -> void

  def battler=: (Battle::Battler? value) -> void

  def shiftMode=: (Integer value) -> void

  def refreshButtonNames: () -> void

  def refreshSelection: () -> void

  def refreshMoveData: (Battle::Move move) -> void

  def refreshMegaEvolutionButton: () -> void

  def refreshShiftButton: () -> void
end

# ==============================================================================
# Target menu (choose a move's target)
# NOTE: Unlike the command and fight menus, this one doesn't have a textbox-only
#       version.
# ==============================================================================
class Battle::Scene::TargetMenu < Battle::Scene::MenuBase
  @buttonBitmap: AnimatedBitmap
  @buttons: Array[Sprite]
  @overlay: BitmapSprite
  @sideSizes: [Integer, Integer]

  @smallButtons: bool

  @texts: Array[String]

  attr_accessor mode: Integer

  # Lists of which button graphics to use in different situations/types of battle.
  MODES: Array[[Integer, Integer, Integer, Integer]]

  CMD_BUTTON_WIDTH_SMALL: Integer

  TEXT_BASE_COLOR: Color

  TEXT_SHADOW_COLOR: Color

  def initialize: (Viewport? viewport, Integer z, [Integer, Integer] sideSizes) -> void

  def setDetails: (Array[Integer] texts, Integer mode) -> void

  def refreshButtons: () -> void
end



