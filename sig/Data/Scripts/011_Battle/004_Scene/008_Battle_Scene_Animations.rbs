# ==============================================================================
# Shows the battle scene fading in while elements slide around into place
# ==============================================================================
class Battle::Scene::Animation::Intro < Battle::Scene::Animation
  @battle: Battle

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Battle battle) -> void

  def createProcesses: () -> void

  def makeSlideSprite: (String spriteName, Numeric deltaMult, Numeric appearTime, ?Integer? origin) -> void
end

# ==============================================================================
# Shows wild PokÃ©mon fading back to their normal color, and triggers their intro
# animations
# ==============================================================================
class Battle::Scene::Animation::Intro2 < Battle::Scene::Animation
  @sideSize: Integer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer sideSize) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Makes a side's party bar and balls appear
# ==============================================================================
class Battle::Scene::Animation::LineupAppear < Battle::Scene::Animation
  BAR_DISPLAY_WIDTH: Integer

  @fullAnim: bool
  @party: Array[Pokemon]
  @partyStarts: Array[Integer]
  @side: Integer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer side, Array[Pokemon] party, Array[Integer] partyStarts, bool fullAnim) -> void

  def resetGraphics: (Hash[String, _Visualizable] sprites) -> void

  def getPartyIndexFromBallIndex: (Integer idxBall) -> Integer

  def createProcesses: () -> void

  def createBall: (Integer idxBall, Numeric delay, Integer dir) -> void
end

# ==============================================================================
# Makes a PokÃ©mon's data box appear
# ==============================================================================
class Battle::Scene::Animation::DataBoxAppear < Battle::Scene::Animation
  @idxBox: Integer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer idxBox) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Makes a PokÃ©mon's data box disappear
# ==============================================================================
class Battle::Scene::Animation::DataBoxDisappear < Battle::Scene::Animation
  @idxBox: Integer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer idxBox) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Makes a PokÃ©mon's ability bar appear
# ==============================================================================
class Battle::Scene::Animation::AbilitySplashAppear < Battle::Scene::Animation
  @side: Integer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer side) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Makes a PokÃ©mon's ability bar disappear
# ==============================================================================
class Battle::Scene::Animation::AbilitySplashDisappear < Battle::Scene::Animation
  @side: Integer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer side) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Make an enemy trainer slide on-screen from the right. Makes the previous
# trainer slide off to the right first if it is on-screen.
# Used at the end of battle.
# ==============================================================================
class Battle::Scene::Animation::TrainerAppear < Battle::Scene::Animation
  @idxTrainer: Integer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer idxTrainer) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Shows the player (and partner) and the player party lineup sliding off screen.
# Shows the player's/partner's throwing animation (if they have one).
# Doesn't show the ball thrown or the PokÃ©mon.
# ==============================================================================
class Battle::Scene::Animation::PlayerFade < Battle::Scene::Animation
  @fullAnim: bool

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, ?bool fullAnim) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Shows the enemy trainer(s) and the enemy party lineup sliding off screen.
# Doesn't show the ball thrown or the PokÃ©mon.
# ==============================================================================
class Battle::Scene::Animation::TrainerFade < Battle::Scene::Animation
  @fullAnim: bool

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, ?bool fullAnim) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Shows a PokÃ©mon being sent out on the player's side (including by a partner).
# Includes the PokÃ© Ball being thrown.
# ==============================================================================
class Battle::Scene::Animation::PokeballPlayerSendOut < Battle::Scene::Animation
  include Battle::Scene::Animation::BallAnimationMixin

  @battler: Battle::Battler
  @idxOrder: Integer
  @idxTrainer: Integer

  @shadowVisible: bool
  @showingTrainer: bool

  @trainer: Trainer?

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer idxTrainer, Battle::Battler battler, bool startBattle, ?Integer idxOrder) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Shows a PokÃ©mon being sent out on the opposing side.
# Includes the PokÃ© Ball being "thrown" (although here the PokÃ© Ball just
# appears in the spot where it opens up rather than being thrown to there).
# ==============================================================================
class Battle::Scene::Animation::PokeballTrainerSendOut < Battle::Scene::Animation
  include Battle::Scene::Animation::BallAnimationMixin

  @battler: Battle::Battler
  @idxOrder: Integer
  @idxTrainer: Integer

  @shadowVisible: bool
  @showingTrainer: bool

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer idxTrainer, Battle::Battler battler, bool startBattle, Integer idxOrder) -> void

  def createProcesses: () -> void

  def createBallTrajectory: (PictureEx ball, Integer destX, Integer destY) -> void
end

# ==============================================================================
# Shows a PokÃ©mon being recalled into its PokÃ© Ball
# ==============================================================================
class Battle::Scene::Animation::BattlerRecall < Battle::Scene::Animation
  include Battle::Scene::Animation::BallAnimationMixin

  @battler: Battle::Battler

  @idxBattler: Integer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Battle::Battler battler) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Shows a PokÃ©mon flashing after taking damage
# ==============================================================================
class Battle::Scene::Animation::BattlerDamage < Battle::Scene::Animation
  @effectiveness: Integer
  @idxBattler: Integer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer idxBattler, Integer effectiveness) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Shows a PokÃ©mon fainting
# ==============================================================================
class Battle::Scene::Animation::BattlerFaint < Battle::Scene::Animation
  @battle: Battle
  @idxBattler: Integer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Integer idxBattler, Battle battle) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Shows the player's PokÃ© Ball being thrown to capture a PokÃ©mon
# ==============================================================================
class Battle::Scene::Animation::PokeballThrowCapture < Battle::Scene::Animation
  include Battle::Scene::Animation::BallAnimationMixin

  @ballSpriteIndex: Integer
  @battler: Battle::Battler
  @critCapture: bool
  @numShakes: Integer
  @poke_ball: Symbol

  @shadowVisible: bool
  @showingTrainer: bool
  @success: bool

  @trainer: Trainer

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Symbol poke_ball, Integer numShakes, bool critCapture, Battle::Battler battler, bool showingTrainer) -> void

  def createProcesses: () -> void
end

# ==============================================================================
# Shows the player throwing a PokÃ© Ball and it being deflected
# ==============================================================================
class Battle::Scene::Animation::PokeballThrowDeflect < Battle::Scene::Animation
  include Battle::Scene::Animation::BallAnimationMixin

  @battler: Battle::Battler
  @poke_ball: Symbol

  def initialize: (Hash[String, _Visualizable] sprites, Viewport? viewport, Symbol poke_ball, Battle::Battler battler) -> void

  def createProcesses: () -> void
end


