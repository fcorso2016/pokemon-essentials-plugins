# ==============================================================================
# This script modifies the battle system to implement battle rules
# ==============================================================================
class Battle
  @__clauses__aliased: bool

  alias __clauses__pbDecisionOnDraw pbDecisionOnDraw

  alias __clauses__pbEndOfRoundPhase pbEndOfRoundPhase
end

# ==============================================================================
#
# ==============================================================================
class Battle::Battler
  @__clauses__aliased: bool
  
  alias __clauses__pbCanSleep? pbCanSleep?

  alias __clauses__pbCanSleepYawn? pbCanSleepYawn?

  alias __clauses__pbCanFreeze? pbCanFreeze?

  alias __clauses__pbUseMove pbUseMove

  def pbHasStatusPokemon?: (untyped status) -> untyped
end

# ==============================================================================
# Double Team
# ==============================================================================
class Battle::Move::RaiseUserEvasion1
  alias __clauses__pbMoveFailed? pbMoveFailed?

  def pbMoveFailed?: (untyped user, untyped targets) -> (true | untyped)
end

# ==============================================================================
# Minimize
# ==============================================================================
class Battle::Move::RaiseUserEvasion2MinimizeUser
  alias __clauses__pbMoveFailed? pbMoveFailed?

  def pbMoveFailed?: (untyped user, untyped targets) -> (true | untyped)
end

# ==============================================================================
# Skill Swap
# ==============================================================================
class Battle::Move::UserTargetSwapAbilities
  alias __clauses__pbFailsAgainstTarget? pbFailsAgainstTarget?
end

# ==============================================================================
# Sonic Boom
# ==============================================================================
class Battle::Move::FixedDamage20
  alias __clauses__pbFailsAgainstTarget? pbFailsAgainstTarget?

  def pbFailsAgainstTarget?: (untyped user, untyped target, untyped show_message) -> (true | untyped)
end

# ==============================================================================
# Dragon Rage
# ==============================================================================
class Battle::Move::FixedDamage40
  alias __clauses__pbFailsAgainstTarget? pbFailsAgainstTarget?

  def pbFailsAgainstTarget?: (untyped user, untyped target, untyped show_message) -> (true | untyped)
end

# ==============================================================================
#
# ==============================================================================
class Battle::Move::OHKO
  alias __clauses__pbFailsAgainstTarget? pbFailsAgainstTarget?
end

# ==============================================================================
#
# ==============================================================================
class Battle::Move::OHKOIce
  alias __clauses__pbFailsAgainstTarget? pbFailsAgainstTarget?
end

# ==============================================================================
#
# ==============================================================================
class Battle::Move::OHKOHitsUndergroundTarget
  alias __clauses__pbFailsAgainstTarget? pbFailsAgainstTarget?

  def pbFailsAgainstTarget?: (untyped user, untyped target, untyped show_message) -> (true | untyped)
end

# ==============================================================================
# Self-Destruct
# ==============================================================================
class Battle::Move::UserFaintsExplosive
  alias __clauses__pbMoveFailed? pbMoveFailed?
end

# ==============================================================================
# Perish Song
# ==============================================================================
class Battle::Move::StartPerishCountsForAllBattlers
  alias __clauses__pbFailsAgainstTarget? pbFailsAgainstTarget?
end

# ==============================================================================
# Destiny Bond
# ==============================================================================
class Battle::Move::AttackerFaintsIfUserFaints
  alias __clauses__pbFailsAgainstTarget? pbFailsAgainstTarget?

  def pbFailsAgainstTarget?: (untyped user, untyped target, untyped show_message) -> (true | untyped)
end


