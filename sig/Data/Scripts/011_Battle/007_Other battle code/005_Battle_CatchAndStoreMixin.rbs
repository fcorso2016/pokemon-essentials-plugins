module Battle::CatchAndStoreMixin
  @criticalCapture: bool

  @decision: Integer

  @first_poke_ball: Symbol

  @poke_ball_failed: bool

  # ============================================================================
  # Store caught PokÃƒÂ©mon
  # ============================================================================
  def pbStorePokemon: (Pokemon pkmn) -> void

  # Register all caught PokÃƒÂ©mon in the PokÃƒÂ©dex, and store them.
  def pbRecordAndStoreCaughtPokemon: () -> void

  # ============================================================================
  # Throw a PokÃƒÂ© Ball
  # ============================================================================
  def pbThrowPokeBall: (Integer idxBattler, Symbol ball, ?Integer? catch_rate, ?bool showPlayer) -> void

  # ============================================================================
  # Calculate how many shakes a thrown PokÃƒÂ© Ball will make (4 = capture)
  # ============================================================================
  def pbCaptureCalc: (Pokemon pkmn, Battle::Battler battler, Integer catch_rate, Symbol ball) -> Integer
end

# ==============================================================================
#
# ==============================================================================
class Battle
  include CatchAndStoreMixin
end



